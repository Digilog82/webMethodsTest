<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_subtype">unknown</value>
  <value name="node_nsName">JSocketAdapter.RESTAPI.UTIL</value>
  <value name="is_public">false</value>
  <value name="shared">cHJpdmF0ZSBzdGF0aWMgRGVidWdMb2dnZXIgZGVidWdMb2dnZXIgPSBuZXcgRGVidWdMb2dnZXIo
KTsKcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIERFQlVHX0xFVkVMID0gIjQiOwoKcHVibGlj
IHN0YXRpYyBTdHJpbmdbXSBleGlzdFBhcmVudFBhdGgoIElEYXRhIHNjaGVtYURlZiwgU3RyaW5n
W10gcGF0aExpc3QsIGludCBwYXRoU2VxICkgewoJSURhdGFDdXJzb3IgY3VyID0gc2NoZW1hRGVm
LmdldEN1cnNvcigpOwoJT2JqZWN0IG9iaiA9IG51bGw7CglTdHJpbmcgY3VyS2V5ID0gIiI7CglT
dHJpbmcgcGF0aE5hbWUgPSBwYXRoTGlzdFsgcGF0aFNlcSBdLnJlcGxhY2UoICJbMF0iLCAiIiAp
OwoJaW50IHBhdGhTaXplID0gcGF0aExpc3QubGVuZ3RoOwoJSURhdGFbXSBhcnJheUlkYXRhID0g
bnVsbDsKCVN0cmluZ1tdIGV4aXN0UmVzdWx0ID0gbmV3IFN0cmluZ1sgMiBdOwoJU3RyaW5nW10g
dGVtcEV4aXN0UmVzdWx0ID0gbmV3IFN0cmluZ1sgMiBdOwoJU3RyaW5nIGV4aXN0cyA9ICJmYWxz
ZSI7CglTdHJpbmcgbm9TZXEgPSBwYXRoU2VxICsgIiI7CgkvL2RlYnVnTG9nZ2VyLnByaW50TG9n
QXRJUygiRXhpc3QgOjo6IHBhdGhOYW1lIDogIiArIHBhdGhOYW1lKTsKCS8vZGVidWdMb2dnZXIu
cHJpbnRMb2dBdElTKCJFeGlzdCA6OjogcGF0aFNlcSA6ICIgKyBwYXRoU2VxKTsKCXdoaWxlICgg
Y3VyLm5leHQoKSApIHsKCQljdXJLZXkgPSBjdXIuZ2V0S2V5KCk7CgkJb2JqID0gY3VyLmdldFZh
bHVlKCk7CgkJCgkJaWYgKCBvYmogPT0gbnVsbCApIHsKCQkJYnJlYWs7CgkJfQoJCQkKCQlpZiAo
IGN1cktleS5lcXVhbHMoIHBhdGhOYW1lICkgKSB7CgkJCWV4aXN0cyA9ICJ0cnVlIjsKCQkJCgkJ
CWlmICggKCBwYXRoU2l6ZSAtIDEgKSA9PSBwYXRoU2VxICkgewoJCQkJYnJlYWs7CgkJCX0KCQkJ
CgkJCS8vIGV4aXN0UGFyZW50UGF0aCDtmLjstpwg7IucIO2MjOudvOuplO2EsOuhnCBwYXRoU2Vx
Kysg66GcIOuEmOqyqOyjvOuptCBwYXRoU2Vx6rCAIOymneqwgOuQmOyngCDslYrsnYAg7IOB7YOc
66GcIOuEmOyWtOqwhOuLpC4KCQkJcGF0aFNlcSsrOwoJCQkKCQkJaWYgKCBvYmogaW5zdGFuY2Vv
ZiBJRGF0YSApIHsKCQkJCXRlbXBFeGlzdFJlc3VsdCA9IGV4aXN0UGFyZW50UGF0aCggKCBJRGF0
YSApb2JqLCBwYXRoTGlzdCwgcGF0aFNlcSApOwoJCQkJZXhpc3RzID0gdGVtcEV4aXN0UmVzdWx0
WyAwIF07CgkJCQlub1NlcSA9IHRlbXBFeGlzdFJlc3VsdFsgMSBdOwoJCQkJCgkJCQlpZiAoIGV4
aXN0cy5lcXVhbHMoICJmYWxzZSIgKSApIHsKCQkJCQlicmVhazsKCQkJCX0KCQkJfSBlbHNlIGlm
ICggb2JqIGluc3RhbmNlb2YgSURhdGFbXSApIHsKCQkJCWFycmF5SWRhdGEgPSAoIElEYXRhW10g
KW9iajsKCQkJCXRlbXBFeGlzdFJlc3VsdCA9IGV4aXN0UGFyZW50UGF0aCggYXJyYXlJZGF0YVsg
MCBdLCBwYXRoTGlzdCwgcGF0aFNlcSApOwoJCQkJZXhpc3RzID0gdGVtcEV4aXN0UmVzdWx0WyAw
IF07CgkJCQlub1NlcSA9IHRlbXBFeGlzdFJlc3VsdFsgMSBdOwoJCQkJCgkJCQlpZiAoIGV4aXN0
cy5lcXVhbHMoICJmYWxzZSIgKSApIHsKCQkJCQlicmVhazsKCQkJCX0KCQkJfQoJCX0KCX0KCS8v
ZGVidWdMb2dnZXIucHJpbnRMb2dBdElTKCJleGlzdHMgOiAiICsgZXhpc3RzKTsKCS8vZGVidWdM
b2dnZXIucHJpbnRMb2dBdElTKCJub1NlcSA6ICIgKyBub1NlcSk7CgljdXIuZGVzdHJveSgpOwoJ
b2JqID0gbnVsbDsKCWFycmF5SWRhdGEgPSBudWxsOwoJCglleGlzdFJlc3VsdFsgMCBdID0gZXhp
c3RzOwoJZXhpc3RSZXN1bHRbIDEgXSA9IG5vU2VxOwoJCglyZXR1cm4gZXhpc3RSZXN1bHQ7Cn0K
CnB1YmxpYyBzdGF0aWMgSURhdGEgY3JlYXRlUGFyZW50UGF0aCggSURhdGEgc2NoZW1hRGVmLCBT
dHJpbmdbXSBwYXRoTGlzdCwgaW50IHBhdGhTZXEgKSB7CglJRGF0YUN1cnNvciBjdXIgPSBzY2hl
bWFEZWYuZ2V0Q3Vyc29yKCk7CglPYmplY3Qgb2JqID0gbnVsbDsKCVN0cmluZyBjdXJLZXkgPSAi
IjsKCVN0cmluZyBwYXRoTmFtZSA9IHBhdGhMaXN0WyBwYXRoU2VxIF0ucmVwbGFjZSggIlswXSIs
ICIiICk7CglpbnQgcGF0aFNpemUgPSBwYXRoTGlzdC5sZW5ndGg7CglJRGF0YSBncm91cElkYXRh
ID0gbnVsbDsKCUlEYXRhW10gYXJyYXlJZGF0YSA9IG51bGw7CgkvL2RlYnVnTG9nZ2VyLnByaW50
TG9nQXRJUygiQ3JlYXRlIDo6OiBwYXRoTmFtZSA6ICIgKyBwYXRoTmFtZSk7CgkvL2RlYnVnTG9n
Z2VyLnByaW50TG9nQXRJUygiQ3JlYXRlIDo6OiBwYXRoU2VxIDogIiArIHBhdGhTZXEpOwoJd2hp
bGUgKCBjdXIubmV4dCgpICkgewoJCWN1cktleSA9IGN1ci5nZXRLZXkoKTsKCQlvYmogPSBjdXIu
Z2V0VmFsdWUoKTsKCQkJCgkJaWYgKCAoIHBhdGhTaXplIC0gMSApID09IHBhdGhTZXEgKSB7CgkJ
CS8vIOuniOyngOuniSBQYXRo7J28IOqyveyasCBQYXRoIOyDneyEsQoJCQljdXIubGFzdCgpOwoJ
CQkJCgkJCWlmICggcGF0aExpc3RbIHBhdGhTZXEgXS5lbmRzV2l0aCggIl0iICkgKSB7CgkJCQkv
LyBBcnJheSDtmJXtg5zsnZggUGF0aOyduCDqsr3smrAKCQkJCWdyb3VwSWRhdGEgPSBJRGF0YUZh
Y3RvcnkuY3JlYXRlKCk7CgkJCQlhcnJheUlkYXRhID0gbmV3IElEYXRhWyAxIF07CgkJCQlhcnJh
eUlkYXRhWyAwIF0gPSBncm91cElkYXRhOwoJCQkJY3VyLmluc2VydEFmdGVyKCBwYXRoTmFtZSwg
YXJyYXlJZGF0YSApOwoJCQl9IGVsc2UgewoJCQkJLy8gR3JvdXAg7ZiV7YOc7J2YIFBhdGjsnbgg
6rK97JqwCgkJCQlncm91cElkYXRhID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJCQkJY3VyLmlu
c2VydEFmdGVyKCBwYXRoTmFtZSwgZ3JvdXBJZGF0YSApOwoJCQl9CgkJCQkKCQkJYnJlYWs7CgkJ
fQoJCQkKCQlpZiAoIGN1cktleS5lcXVhbHMoIHBhdGhOYW1lICkgKSB7CgkJCS8vIGNyZWF0ZVBh
cmVudFBhdGgg7Zi47LacIOyLnCDtjIzrnbzrqZTthLDroZwgcGF0aFNlcSsrIOuhnCDrhJjqsqjs
o7zrqbQgcGF0aFNlceqwgCDspp3qsIDrkJjsp4Ag7JWK7J2AIOyDge2DnOuhnCDrhJjslrTqsITr
i6QuCgkJCXBhdGhTZXErKzsKCQkJCQoJCQlpZiAoIG9iaiBpbnN0YW5jZW9mIElEYXRhICkgewoJ
CQkJY3JlYXRlUGFyZW50UGF0aCggKCBJRGF0YSApb2JqLCBwYXRoTGlzdCwgcGF0aFNlcSApOwoJ
CQl9IGVsc2UgaWYgKCBvYmogaW5zdGFuY2VvZiBJRGF0YVtdICkgewoJCQkJYXJyYXlJZGF0YSA9
ICggSURhdGFbXSApb2JqOwoJCQkJY3JlYXRlUGFyZW50UGF0aCggYXJyYXlJZGF0YVsgMCBdLCBw
YXRoTGlzdCwgcGF0aFNlcSApOwoJCQl9CgkJfQoJfQoJCglpZiAoIGN1cktleS5lcXVhbHMoICIi
ICkgKSB7CgkJLy8gd2hpbGXsnbQg7Iuk7ZaJ65CY7KeAIOyViuydgCDqsr3smrAgPT0+IHNjaGVt
YURlZiBJRGF0YeyXkCDsg53shLHrkJwgT2JqZWN06rCAIO2VmOuCmOuPhCDsl4bripQg6rK97Jqw
ID09PiDstZzstIjroZwgT2JqZWN066W8IOyDneyEse2VtOykjC4KCQlpZiAoIHBhdGhMaXN0WyBw
YXRoU2VxIF0uZW5kc1dpdGgoICJdIiApICkgewoJCQkvLyBBcnJheSDtmJXtg5zsnZggUGF0aOyd
uCDqsr3smrAKCQkJZ3JvdXBJZGF0YSA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCQkJYXJyYXlJ
ZGF0YSA9IG5ldyBJRGF0YVsgMSBdOwoJCQlhcnJheUlkYXRhWyAwIF0gPSBncm91cElkYXRhOwoJ
CQljdXIuaW5zZXJ0QWZ0ZXIoIHBhdGhOYW1lLCBhcnJheUlkYXRhICk7CgkJfSBlbHNlIHsKCQkJ
Ly8gR3JvdXAg7ZiV7YOc7J2YIFBhdGjsnbgg6rK97JqwCgkJCWdyb3VwSWRhdGEgPSBJRGF0YUZh
Y3RvcnkuY3JlYXRlKCk7CgkJCWN1ci5pbnNlcnRBZnRlciggcGF0aE5hbWUsIGdyb3VwSWRhdGEg
KTsKCQl9Cgl9CgkKCWN1ci5kZXN0cm95KCk7CglvYmogPSBudWxsOwoJYXJyYXlJZGF0YSA9IG51
bGw7Cglncm91cElkYXRhID0gbnVsbDsKCQoJcmV0dXJuIHNjaGVtYURlZjsKfQoKcHVibGljIHN0
YXRpYyBJRGF0YSBzZXRTY2hlbWFEZWZWYWx1ZSggSURhdGEgc2NoZW1hRGVmLCBTdHJpbmdbXSBw
YXRoTGlzdCwgaW50IHBhdGhTZXEsIFN0cmluZyBmaWVsZE5hbWUsIFN0cmluZyBmaWVsZFZhbHVl
ICkgewoJSURhdGFDdXJzb3IgY3VyID0gc2NoZW1hRGVmLmdldEN1cnNvcigpOwoJT2JqZWN0IG9i
aiA9IG51bGw7CglTdHJpbmcgY3VyS2V5ID0gIiI7CglTdHJpbmcgcGF0aE5hbWUgPSBwYXRoTGlz
dFsgcGF0aFNlcSBdLnJlcGxhY2UoICJbMF0iLCAiIiApOwoJaW50IHBhdGhTaXplID0gcGF0aExp
c3QubGVuZ3RoOwoJSURhdGEgZ3JvdXBJZGF0YSA9IG51bGw7CglJRGF0YVtdIGFycmF5SWRhdGEg
PSBudWxsOwoJSURhdGFDdXJzb3IgZ3JvdXBDdXIgPSBudWxsOwoJCgl3aGlsZSAoIGN1ci5uZXh0
KCkgKSB7CgkJY3VyS2V5ID0gY3VyLmdldEtleSgpOwoJCW9iaiA9IGN1ci5nZXRWYWx1ZSgpOwoJ
CQoJCWlmICggY3VyS2V5LmVxdWFscyggcGF0aE5hbWUgKSApIHsKCQkJLy9kZWJ1Z0xvZ2dlci5w
cmludExvZ0F0SVMoInBhdGhOYW1lIDogIiArIHBhdGhOYW1lKTsKCQkJLy9kZWJ1Z0xvZ2dlci5w
cmludExvZ0F0SVMoInBhdGhTZXEgOiAiICsgcGF0aFNlcSk7CgkJCS8vZGVidWdMb2dnZXIucHJp
bnRMb2dBdElTKCJmaWVsZE5hbWUgOiAiICsgZmllbGROYW1lKTsKCQkJaWYgKCAoIHBhdGhTaXpl
IC0gMSApID09IHBhdGhTZXEgKSB7CgkJCQkvLyDrp4jsp4Drp4kgUGF0aOydvCDqsr3smrAgTmFt
ZS9WYWx1ZSDsg53shLEJCQkJCQoJCQkJaWYgKCBvYmogaW5zdGFuY2VvZiBJRGF0YSApIHsKCQkJ
CQlncm91cElkYXRhID0gKCBJRGF0YSApb2JqOwoJCQkJCWdyb3VwQ3VyID0gZ3JvdXBJZGF0YS5n
ZXRDdXJzb3IoKTsKCQkJCQlncm91cEN1ci5pbnNlcnRBZnRlciggZmllbGROYW1lLCBmaWVsZFZh
bHVlICk7CgkJCQkJSURhdGFVdGlsLnB1dCggY3VyLCBjdXJLZXksIGdyb3VwSWRhdGEgKTsKCQkJ
CQlncm91cEN1ci5kZXN0cm95KCk7CgkJCQl9IGVsc2UgaWYgKCBvYmogaW5zdGFuY2VvZiBJRGF0
YVtdICkgewoJCQkJCWFycmF5SWRhdGEgPSAoIElEYXRhW10gKW9iajsKCQkJCQkKCQkJCQlpZiAo
IGFycmF5SWRhdGEubGVuZ3RoID09IDAgKSB7CgkJCQkJCS8vIOy1nOy0iOuhnCBOYW1lL1ZhbHVl
IOyDneyEse2VmOuKlCDqsr3smrAKCQkJCQkJZ3JvdXBJZGF0YSA9IElEYXRhRmFjdG9yeS5jcmVh
dGUoKTsKCQkJCQkJZ3JvdXBDdXIgPSBncm91cElkYXRhLmdldEN1cnNvcigpOwoJCQkJCQlncm91
cEN1ci5pbnNlcnRBZnRlciggZmllbGROYW1lLCBmaWVsZFZhbHVlICk7CgkJCQkJCWFycmF5SWRh
dGEgPSBuZXcgSURhdGFbIDEgXTsKCQkJCQkJYXJyYXlJZGF0YVsgMCBdID0gZ3JvdXBJZGF0YTsK
CQkJCQkJSURhdGFVdGlsLnB1dCggY3VyLCBjdXJLZXksIGFycmF5SWRhdGEgKTsKCQkJCQkJZ3Jv
dXBDdXIuZGVzdHJveSgpOwoJCQkJCX0gZWxzZSB7CgkJCQkJCWdyb3VwSWRhdGEgPSBhcnJheUlk
YXRhWyAwIF07CgkJCQkJCWdyb3VwQ3VyID0gZ3JvdXBJZGF0YS5nZXRDdXJzb3IoKTsKCQkJCQkJ
Z3JvdXBDdXIuaW5zZXJ0QWZ0ZXIoIGZpZWxkTmFtZSwgZmllbGRWYWx1ZSApOwoJCQkJCQlhcnJh
eUlkYXRhWyAwIF0gPSBncm91cElkYXRhOwoJCQkJCQlJRGF0YVV0aWwucHV0KCBjdXIsIGN1cktl
eSwgYXJyYXlJZGF0YSApOwoJCQkJCQlncm91cEN1ci5kZXN0cm95KCk7CgkJCQkJfQoJCQkJfQoJ
CQkJCgkJCQlicmVhazsKCQkJfQoJCQkKCQkJLy8gc2V0U2NoZW1hRGVmVmFsdWUg7Zi47LacIOyL
nCDtjIzrnbzrqZTthLDroZwgcGF0aFNlcSsrIOuhnCDrhJjqsqjso7zrqbQgcGF0aFNlceqwgCDs
pp3qsIDrkJjsp4Ag7JWK7J2AIOyDge2DnOuhnCDrhJjslrTqsITri6QuCgkJCXBhdGhTZXErKzsK
CQkJCgkJCWlmICggb2JqIGluc3RhbmNlb2YgSURhdGEgKSB7CgkJCQlzZXRTY2hlbWFEZWZWYWx1
ZSggKCBJRGF0YSApb2JqLCBwYXRoTGlzdCwgcGF0aFNlcSwgZmllbGROYW1lLCBmaWVsZFZhbHVl
ICk7CgkJCX0gZWxzZSBpZiAoIG9iaiBpbnN0YW5jZW9mIElEYXRhW10gKSB7CgkJCQlhcnJheUlk
YXRhID0gKCBJRGF0YVtdIClvYmo7CgkJCQlzZXRTY2hlbWFEZWZWYWx1ZSggYXJyYXlJZGF0YVsg
MCBdLCBwYXRoTGlzdCwgcGF0aFNlcSwgZmllbGROYW1lLCBmaWVsZFZhbHVlICk7CgkJCX0KCQl9
Cgl9CgkKCWN1ci5kZXN0cm95KCk7CglvYmogPSBudWxsOwoJYXJyYXlJZGF0YSA9IG51bGw7Cgln
cm91cElkYXRhID0gbnVsbDsKCQoJcmV0dXJuIHNjaGVtYURlZjsKfQoKcHVibGljIHN0YXRpYyBJ
RGF0YVtdIG1ha2VTdHJpbmdJRGF0YV9BcHBseVNjaGVtYSggU3RyaW5nIHNvY2tldFN0cmluZywg
aW50IGJ5dGVMZW5ndGgsIElEYXRhIHNjaGVtYURlZiwgaW50IHN0YXJ0T2ZmU2V0LCBTdHJpbmdb
XSByZWNDb3VudEZpZWxkTmFtZSwgaW50IHJlY0luZGV4LCBTdHJpbmcgY2hhcnNldCwgU3RyaW5n
IGNvbnZlcnRKc29uLCBJRGF0YSBwaXBlbGluZURhdGEgKSB7CglJRGF0YUN1cnNvciBjdXIgPSBz
Y2hlbWFEZWYuZ2V0Q3Vyc29yKCk7IC8vIFNjaGVtYSDsoJXsnZggSURhdGEKCVN0cmluZyBjdXJL
ZXkgPSBudWxsOwoJT2JqZWN0IG9iaiA9IG51bGw7CglTdHJpbmcga2V5VmFsdWUgPSAiIjsgLy8g
RmllbGTsl5Ag64yA7ZWcIFNjaGVtYSDsoJXsnZggU3RyaW5nID09PiBGaWVsZCBMZW5ndGgvUGFk
ZGluZyBTdHJpbmcvTGVmdCBQYWRkaW5nLCBSaWdodCBQYWRkaW5nIOq1rOu2hC9GaWVsZCBEZXNj
L0RhdGEgVHlwZS9MZW5ndGggQ2FsY3VsYXRpb24gU3RhcnQvRmllbGQgVHlwZQoJU3RyaW5nIGZp
ZWxkVmFsdWUgPSAiIjsKCU9iamVjdCBvdXROdW1iZXIgPSBudWxsOwoJU3RyaW5nW10gdG9rZW4g
PSBudWxsOwoJU3RyaW5nIGZpZWxkTGVuZ3RoID0gIiI7CglTdHJpbmcgZGF0YVR5cGUgPSAiIjsK
CVN0cmluZyBmaWVsZFR5cGUgPSAiIjsKCVN0cmluZyByZWFsRmllbGRUeXBlID0gIiI7CglTdHJp
bmcgdmFsdWVUeXBlID0gIiI7CglTdHJpbmdbXSBzdmNJbmZvID0gbnVsbDsKCVN0cmluZ1tdIG90
VG9rZW4gPSBudWxsOwoJSURhdGFbXSByZWNMaXN0ID0gbnVsbDsKCVN0cmluZ1tdIHJlY0NvdW50
RmllbGRQYXRoID0gbnVsbDsKCVN0cmluZyBhcnJheUNvdW50RmllbGROYW1lID0gIiI7CglTdHJp
bmcgcmVjQ291bnRWYWx1ZSA9IG51bGw7CglpbnQgZmllbGRMZW4gPSAwOwoJaW50IHJlY0NvdW50
ID0gMDsgLy8gUmVjb3JkIOqwr+yImAoJCglJRGF0YVtdIGRvY0luZm8gPSBuZXcgSURhdGFbIDQg
XTsKCUlEYXRhIGRvYyA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCUlEYXRhQ3Vyc29yIGRvY0N1
cnNvciA9IGRvYy5nZXRDdXJzb3IoKTsKCUlEYXRhIG5leHRTdGFydCA9IElEYXRhRmFjdG9yeS5j
cmVhdGUoKTsKCUlEYXRhQ3Vyc29yIG5leHRDdXJzb3IgPSBuZXh0U3RhcnQuZ2V0Q3Vyc29yKCk7
CglJRGF0YSBlcnJvciA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCUlEYXRhQ3Vyc29yIGVycm9y
Q3Vyc29yID0gZXJyb3IuZ2V0Q3Vyc29yKCk7CglJRGF0YSByZWNDb3VudEluZGV4ID0gSURhdGFG
YWN0b3J5LmNyZWF0ZSgpOwoJSURhdGFDdXJzb3IgcmVjQ291bnRDdXJzb3IgPSByZWNDb3VudElu
ZGV4LmdldEN1cnNvcigpOwoJSURhdGEgZ3JvdXBEZWYgPSBudWxsOyAvLyBTaW5nbGUgUmVjb3Jk
IOq1rOyhsOydmCBHcm91cCBJRGF0YQoJaW50IHRlbXBSZWNJbmRleCA9IDA7CglTdHJpbmcgZXJy
b3JNc2cgPSAiIjsKCVN0cmluZyB0ZW1wRXJyb3JNc2cgPSAiIjsKCUlEYXRhQ3Vyc29yIHRlbXBF
cnJvckN1cnNvciA9IG51bGw7CgkKCUlEYXRhW10gZG9jTGlzdCA9IG51bGw7CglJRGF0YVtdIHRl
bXBEb2NJbmZvID0gbnVsbDsKCUlEYXRhQ3Vyc29yIHRlbXBDdXJzb3IgPSBudWxsOwoJCglJRGF0
YSBpbklEYXRhID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJSURhdGFDdXJzb3IgaW5wdXRDdXJz
b3IgPSBpbklEYXRhLmdldEN1cnNvcigpOwoJSURhdGEgb3V0SURhdGEgPSBudWxsOwoJSURhdGFD
dXJzb3Igb3V0cHV0Q3Vyc29yID0gbnVsbDsKCQoJdHJ5IHsKCQl3aGlsZSAoIGN1ci5uZXh0KCkg
KSB7CgkJCWN1cktleSA9IGN1ci5nZXRLZXkoKTsKCQkJb2JqID0gY3VyLmdldFZhbHVlKCk7CgoJ
CQlpZiAoIG9iaiA9PSBudWxsICkgewoJCQkJY29udGludWU7CgkJCX0gZWxzZSBpZiAoIG9iaiBp
bnN0YW5jZW9mIFN0cmluZyApIHsgLy8gb2JqIGlzIFN0cmluZwoJCQkJa2V5VmFsdWUgPSAoIFN0
cmluZyApb2JqOwoJCQkJCgkJCQl0b2tlbiA9IGtleVZhbHVlLnNwbGl0KCAiLyIgKTsKCQkJCWZp
ZWxkTGVuZ3RoID0gdG9rZW5bIDAgXTsKCQkJCWRhdGFUeXBlID0gdG9rZW5bIDQgXTsKCQkJCWZp
ZWxkVHlwZSA9IHRva2VuWyA2IF07CgkJCQlvdFRva2VuID0gZmllbGRUeXBlLnNwbGl0KCAiXFwk
IiApOwoJCQkJcmVhbEZpZWxkVHlwZSA9IG90VG9rZW5bIDAgXS50cmltKCkudG9VcHBlckNhc2Uo
KTsKCQkJCQoJCQkJLyogCgkJCQkgKiByZWFsRmllbGRUeXBlCgkJCQkgKiBTVCA6IEZpZWxk6rCA
IFNvdXJjZSwgVGFyZ2V07JeQIOuqqOuRkCDsobTsnqztlZjripQg6rK97JqwID09PiBTb3VyY2Xs
l5DshJwgVmFsdWUg7LaU7LacLCBUYXJnZXTsl5AgRmllbGQg7IOd7ISxIOuwjyBWYWx1ZSDrp6Tt
lZEKCQkJCSAqIE9TIDogRmllbGTqsIAgU291cmNl7JeQ66eMIOyhtOyerO2VmOqzoCBUYXJnZXTs
l5DripQgIOyhtOyerO2VmOyngCDslYrripQg6rK97JqwID09PiBTb3VyY2Xsl5DshJwgVmFsdWUg
7LaU7LacLCBUYXJnZXTsl5AgRmllbGQg7IOd7ISxIOuwjyBWYWx1ZSDrp6TtlZEg7IOd6561CgkJ
CQkgKiBPVCA6IEZpZWxk6rCAIFRhcmdldOyXkOunjCDsobTsnqztlZjqs6AgU291cmNl7JeQ64qU
ICDsobTsnqztlZjsp4Ag7JWK64qUIOqyveyasCA9PT4gU291cmNl7JeQ7IScIFZhbHVlIOy2lOy2
nCDsg53rnrUsIFRhcmdldOyXkCBGaWVsZCDsg53shLEg67CPIFZhbHVlIOunpO2VkQkJCQkJIAoJ
CQkJICovCgkJCQkKCQkJCS8vIFNvdXJjZeyXkOyEnCBWYWx1ZSDstpTstpwKCQkJCWlmICggcmVh
bEZpZWxkVHlwZS5lcXVhbHMoICJTVCIgKSB8fCByZWFsRmllbGRUeXBlLmVxdWFscyggIk9TIiAp
ICkgewoJCQkJCXRyeSB7CgkJCQkJCS8vIGZpZWxkTGVuZ3Ro7JeQIOyLpOygnOuhnCBGaWVsZOyd
mCDquLjsnbQg7KCV67O06rCAIOyeiOuKlCDqsr3smrAgPT0+IEZpZWxk6rCAIOqzoOygleq4uOyd
tOyduCDqsr3smrAKCQkJCQkJZmllbGRMZW4gPSBJbnRlZ2VyLnBhcnNlSW50KCBmaWVsZExlbmd0
aCApOwoJCQkJCX0gY2F0Y2ggKCBFeGNlcHRpb24gaWUgKSB7CgkJCQkJCS8vIGZpZWxkTGVuZ3Ro
7JeQIEZpZWxk7J2YIOq4uOydtCDsoJXrs7Trpbwg7Y+s7ZWo7ZWY64qUIEZpZWxk66qFIOygleuz
tOqwgCDsnojripQg6rK97JqwID09PiBGaWVsZOqwgCDqsIDrs4DquLjsnbTsnbgg6rK97JqwCgkJ
CQkJCWZpZWxkTGVuZ3RoID0gSURhdGFVdGlsLmdldFN0cmluZyggZG9jQ3Vyc29yLCBmaWVsZExl
bmd0aCApLnRyaW0oKTsKCQkJCQkJZmllbGRMZW4gPSBJbnRlZ2VyLnBhcnNlSW50KCBmaWVsZExl
bmd0aCApOwoJCQkJCQkKCQkJCQkJLy8gSURhdGFVdGlsLmdldFN0cmluZyDsi6Ttlokg7IucICBD
dXJzb3Ig7JyE7LmY6rCAIOydtOuPme2WiOydhCDsiJgg7J6I6riwIOuVjOusuOyXkCDri6Tsi5wg
66eI7KeA66eJIOychOy5mOuhnCBDdXJzb3Lrpbwg7J2064+Z7Iuc7YKo64ukLgoJCQkJCQlkb2ND
dXJzb3IubGFzdCgpOwoJCQkJCX0KCQoJCQkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAi
aW5TdHJpbmciLCBzb2NrZXRTdHJpbmcgKTsKCQkJCQlJRGF0YVV0aWwucHV0KCBpbnB1dEN1cnNv
ciwgInN0YXJ0T2Zmc2V0Iiwgc3RhcnRPZmZTZXQgKyAiIiApOwoJCQkJCUlEYXRhVXRpbC5wdXQo
IGlucHV0Q3Vyc29yLCAibGVuZ3RoIiwgZmllbGRMZW5ndGggKTsKCQkJCQlJRGF0YVV0aWwucHV0
KCBpbnB1dEN1cnNvciwgImNoYXJzZXQiLCBjaGFyc2V0ICk7CgkJCQkKCQkJCQlvdXRJRGF0YSA9
IFNlcnZpY2UuZG9JbnZva2UoICJKU29ja2V0QWRhcHRlci5DT01NT04uVVRJTC5TVFJJTkciLCAi
c3Vic3RyaW5nQnlCeXRlcyIsIGluSURhdGEgKTsKCQkJCQlvdXRwdXRDdXJzb3IgPSBvdXRJRGF0
YS5nZXRDdXJzb3IoKTsKCQkJCQlmaWVsZFZhbHVlID0gSURhdGFVdGlsLmdldFN0cmluZyggb3V0
cHV0Q3Vyc29yLCAib3V0U3RyaW5nIiApOwoJCQkJfSBlbHNlIGlmICggcmVhbEZpZWxkVHlwZS5l
cXVhbHMoICJPVCIgKSApIHsJCQkJCQkKCQkJCQkvLyBPVCRGViRWYWx1ZSA6IOqzoOygleqwkuyd
uCDqsr3smrAgPT0+IFZhbHVlIOu2gOu2hOyXkCDsnojripQg6rCS7J20IFZhbHVl6rCAIOuQnOuL
pC4KCQkJCQkvLyBPVCRWViRTZXJ2aWNlIEZ1bGwgTmFtZSA6IOqwgOuzgOqwkuyduCDqsr3smrAg
PT0+IFNlcnZpY2UgRnVsbCBOYW1l7J2EIO2YuOy2nO2VtOyEnCBWYWx1ZeulvCDqtaztlZzri6Qu
CgkJCQkJZmllbGRMZW4gPSAwOwoJCQkJCXZhbHVlVHlwZSA9IG90VG9rZW5bIDEgXS50cmltKCku
dG9VcHBlckNhc2UoKTsKCQkJCQkKCQkJCQlpZiAoIHZhbHVlVHlwZS5lcXVhbHMoICJGViIgKSAp
IHsKCQkJCQkJZmllbGRWYWx1ZSA9IG90VG9rZW5bIDIgXTsKCQkJCQl9IGVsc2UgaWYgKCB2YWx1
ZVR5cGUuZXF1YWxzKCAiVlYiICkgKSB7CgkJCQkJCXN2Y0luZm8gPSBvdFRva2VuWyAyIF0udHJp
bSgpLnNwbGl0KCAiOiIgKTsKCQkJCQkJSURhdGFVdGlsLnB1dCggaW5wdXRDdXJzb3IsICJwaXBl
bGluZURhdGEiLCBwaXBlbGluZURhdGEgKTsKCQkJCQkJb3V0SURhdGEgPSBTZXJ2aWNlLmRvSW52
b2tlKCBzdmNJbmZvWyAwIF0sIHN2Y0luZm9bIDEgXSwgaW5JRGF0YSApOwoJCQkJCQlvdXRwdXRD
dXJzb3IgPSBvdXRJRGF0YS5nZXRDdXJzb3IoKTsKCQkJCQkJZmllbGRWYWx1ZSA9IElEYXRhVXRp
bC5nZXRTdHJpbmcoIG91dHB1dEN1cnNvciwgIm91dFZhbHVlIiApOwoJCQkJCX0KCQkJCX0KCQkJ
CQoJCQkJLy8gVGFyZ2V0IEZpZWxkIOyDneyEsSDrsI8gVmFsdWUg66ek7ZWRCgkJCQlpZiAoIHJl
YWxGaWVsZFR5cGUuZXF1YWxzKCAiU1QiICkgfHwgcmVhbEZpZWxkVHlwZS5lcXVhbHMoICJPVCIg
KSApIHsJCQkJCQoJCQkJCWlmICggZGF0YVR5cGUuZXF1YWxzKCAiUyIgKSApIHsKCQkJCQkJLy8g
RGF0YSBUeXBl7J20IFN0cmluZ+yduCDqsr3smrAKCQkJCQkJZG9jQ3Vyc29yLmluc2VydEFmdGVy
KCBjdXJLZXksIGZpZWxkVmFsdWUgKTsKCQkJCQl9IGVsc2UgewoJCQkJCQkvLyBEYXRhIFR5cGXs
nbQgTnVtYmVy7J24IOqyveyasAoJCQkJCQkvLyBKU09OIOuzgO2ZmOydhCDtlZjripQg6rK97Jqw
7JeQ64qUIOyIq+yekCDtg4DsnoXsnLzroZwg6rCS7J2EIOunpO2Vke2VmOqzoCBKU09OIOuzgO2Z
mOydhCDtlZjsp4Ag7JWK64qUIOqyveyasOyXkOuKlCBOdW1iZXIg7YOA7J6F7J206528IO2VtOuP
hCBTdHJpbmcg7YOA7J6F7Jy866GcIOqwkuydhCDrp6TtlZHtlZzri6QuCgkJCQkJCWlmICggY29u
dmVydEpzb24uZXF1YWxzKCAiWWVzIiApICkgewoJCQkJCQkJaWYgKCBmaWVsZFZhbHVlLmNvbnRh
aW5zKCAiLiIgKSApIHsKCQkJCQkJCQlvdXROdW1iZXIgPSBEb3VibGUucGFyc2VEb3VibGUoIGZp
ZWxkVmFsdWUgKTsKCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJb3V0TnVtYmVyID0gTG9uZy5wYXJz
ZUxvbmcoIGZpZWxkVmFsdWUgKTsKCQkJCQkJCX0KCQkJCQkKCQkJCQkJCWRvY0N1cnNvci5pbnNl
cnRBZnRlciggY3VyS2V5LCBvdXROdW1iZXIgKTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCWRvY0N1
cnNvci5pbnNlcnRBZnRlciggY3VyS2V5LCBmaWVsZFZhbHVlICk7CgkJCQkJCX0KCQkJCQl9CgkJ
CQl9CgkJCQkKCQkJCS8vIE5leHQgc3RhcnRPZmZTZXQKCQkJCXN0YXJ0T2ZmU2V0ID0gc3RhcnRP
ZmZTZXQgKyBmaWVsZExlbjsKCQkJCS8qCgkJCQlpZiAoIHN0YXJ0T2ZmU2V0ID49IGJ5dGVMZW5n
dGggKSB7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCQkqLwoJCQl9IGVsc2UgaWYgKCBvYmogaW5zdGFu
Y2VvZiBJRGF0YSApIHsgLy8gb2JqIGlzIElEYXRhCgkJCQlncm91cERlZiA9ICggSURhdGEgKW9i
ajsKCQkJCXRlbXBEb2NJbmZvID0gbWFrZVN0cmluZ0lEYXRhX0FwcGx5U2NoZW1hKCBzb2NrZXRT
dHJpbmcsIGJ5dGVMZW5ndGgsIGdyb3VwRGVmLCBzdGFydE9mZlNldCwgcmVjQ291bnRGaWVsZE5h
bWUsIHJlY0luZGV4LCBjaGFyc2V0LCBjb252ZXJ0SnNvbiwgcGlwZWxpbmVEYXRhICk7CQkJCQkK
CQkJCXRlbXBDdXJzb3IgPSB0ZW1wRG9jSW5mb1sgMSBdLmdldEN1cnNvcigpOwoJCQkJc3RhcnRP
ZmZTZXQgPSBJRGF0YVV0aWwuZ2V0SW50KCB0ZW1wQ3Vyc29yLCAibmV4dFN0YXJ0T2ZmU2V0Iiwg
MCApOwoJCQkJCgkJCQl0ZW1wQ3Vyc29yLmRlc3Ryb3koKTsKCQkJCXRlbXBDdXJzb3IgPSB0ZW1w
RG9jSW5mb1sgMiBdLmdldEN1cnNvcigpOwoJCQkJdGVtcFJlY0luZGV4ID0gSURhdGFVdGlsLmdl
dEludCggdGVtcEN1cnNvciwgInJlY0luZGV4IiwgMCApOwoJCQkJCgkJCQl0ZW1wRXJyb3JDdXJz
b3IgPSB0ZW1wRG9jSW5mb1sgMyBdLmdldEN1cnNvcigpOwoJCQkJdGVtcEVycm9yTXNnID0gSURh
dGFVdGlsLmdldFN0cmluZyggdGVtcEVycm9yQ3Vyc29yLCAiZXJyb3JNc2ciICk7CgkJCQkKCQkJ
CWlmICggIXRlbXBFcnJvck1zZy5lcXVhbHMoICIiICkgKSB7CgkJCQkJZXJyb3JNc2cgPSBlcnJv
ck1zZyArICJcbiIgKyB0ZW1wRXJyb3JNc2c7CgkJCQl9CgkJCQkKCQkJCS8vIHJlY0NvdW50Rmll
bGROYW1l7J2YIEluZGV4IOymneqwgAoJCQkJcmVjSW5kZXggPSB0ZW1wUmVjSW5kZXg7CgkJCQlk
b2NDdXJzb3IuaW5zZXJ0QWZ0ZXIoIGN1cktleSwgdGVtcERvY0luZm9bIDAgXSApOwoJCQkJCgkJ
CQl0ZW1wQ3Vyc29yLmRlc3Ryb3koKTsKCQkJCXRlbXBFcnJvckN1cnNvci5kZXN0cm95KCk7CgkJ
CQl0ZW1wRG9jSW5mbyA9IG51bGw7CgkJCQlncm91cERlZiA9IG51bGw7CgkJCX0gZWxzZSBpZiAo
IG9iaiBpbnN0YW5jZW9mIElEYXRhW10gKSB7IC8vIG9iaiBpcyBJRGF0YVtdCgkJCQlyZWNMaXN0
ID0gKCBJRGF0YVtdIClvYmo7CgkJCQkKCQkJCWlmICggcmVjTGlzdCA9PSBudWxsICkgewoJCQkJ
CWNvbnRpbnVlOwoJCQkJfQoJCQkJCgkJCQkvLyBSZWNvcmQg6rCv7IiYIOy2lOy2nAoJCQkJaWYg
KCByZWNDb3VudEZpZWxkTmFtZSA9PSBudWxsIHx8IHJlY0NvdW50RmllbGROYW1lLmxlbmd0aCA9
PSAwICkgewoJCQkJCS8vIO2VmOuCmOydmCBBcnJheeunjCDsnojripQg7Y+s66e37J2066m07ISc
IOqwgOuzgOq4uOydtOydtOqzoCBBcnJheSBDb3VudOulvCDtj6ztlajtlZjripQg7ZWE65Oc6rCA
IOyXhuuKlCDsoITrrLjsnbgg6rK97JqwIEFycmF5IENvdW5066W8IOq1rO2VnOuLpC4KCQkJCQly
ZWNDb3VudCA9IGdldEFycmF5Q291bnQoIHNvY2tldFN0cmluZywgc2NoZW1hRGVmLCBjaGFyc2V0
ICk7CgkJCQl9IGVsc2UgewoJCQkJCS8vIDIwMjIuMDguMDUg7IiY7KCVLiBBcnJheSBDb3VudOul
vCDtj6ztlajtlZjqs6Ag7J6I64qUIO2VhOuTnOqwgCBQYXRoIO2Yle2DnOuhnCDrsJTrgIzslrTs
hJwg7ZWE65Oc66qF66eMIOu9keuKlCDsspjrpqzrpbwg7IiY7ZaJ7ZWoLgoJCQkJCS8vcmVjQ291
bnRWYWx1ZSA9IElEYXRhVXRpbC5nZXRTdHJpbmcoIGRvY0N1cnNvciwgcmVjQ291bnRGaWVsZE5h
bWVbIHJlY0luZGV4IF0gKTsKCQkJCQlyZWNDb3VudEZpZWxkUGF0aCA9IHJlY0NvdW50RmllbGRO
YW1lWyByZWNJbmRleCBdLnNwbGl0KCAiLyIgKTsKCQkJCQlhcnJheUNvdW50RmllbGROYW1lID0g
cmVjQ291bnRGaWVsZFBhdGhbIHJlY0NvdW50RmllbGRQYXRoLmxlbmd0aCAtIDEgXTsKCQkJCQly
ZWNDb3VudFZhbHVlID0gSURhdGFVdGlsLmdldFN0cmluZyggZG9jQ3Vyc29yLCBhcnJheUNvdW50
RmllbGROYW1lICk7CgkJCQkKCQkJCQlpZiAoIHJlY0NvdW50VmFsdWUgPT0gbnVsbCApIHsKCQkJ
CQkJLy8g66CI7L2U65OcIOqwr+yImOqwgCDtj6ztlajrkJwgRmllbGTsnZggTmFtZeydtCDslYTr
i4jqs6Ag66CI7L2U65Oc7J2YIOqwr+yImOulvCDsp4HsoJEg7KCE64usIOuwm+ydgCDqsr3smrAg
PT0+IOqzoOygleq4uOydtAoJCQkJCQlyZWNDb3VudCA9IEludGVnZXIucGFyc2VJbnQoIHJlY0Nv
dW50RmllbGROYW1lWyByZWNJbmRleCBdLnRyaW0oKSApOwoJCQkJCX0gZWxzZSB7CgkJCQkJCS8v
IOugiOy9lOuTnCDqsK/siJjqsIAg7Y+s7ZWo65CcIEZpZWxk7J2YIE5hbWXsnYQg7KCE64usIOuw
m+ydgCDqsr3smrAgPT0+IOqwgOuzgOq4uOydtAoJCQkJCQlyZWNDb3VudCA9IEludGVnZXIucGFy
c2VJbnQoIHJlY0NvdW50VmFsdWUudHJpbSgpICk7CgkJCQkJfQoJCQkJfQoJCQkJCgkJCQkvLyBS
ZWNvcmQg6rCv7IiYIOy2lOy2nO2VoCDrlYwgQ3Vyc29yIOychOy5mOqwgCDsnbTrj5ntlojsnYQg
7IiYIOyeiOq4sCDrlYzrrLjsl5Ag64uk7IucIOuniOyngOuniSDsnITsuZjroZwgQ3Vyc29y66W8
IOydtOuPmeyLnO2CqOuLpC4KCQkJCWRvY0N1cnNvci5sYXN0KCk7CgkJCQkKCQkJCWlmICggcmVj
Q291bnQgPT0gMCApIHsKCQkJCQkvLyByZWNDb3VudEZpZWxkTmFtZeydmCBJbmRleCDspp3qsIAK
CQkJCQlyZWNJbmRleCArPSAxOwoJCQkJfSBlbHNlIHsKCQkJCQlkb2NMaXN0ID0gbmV3IElEYXRh
WyByZWNDb3VudCBdOwoJCQkJCgkJCQkJZm9yICggaW50IGkgPSAwOyBpIDwgcmVjQ291bnQ7IGkr
KyApIHsKCQkJCQkJdGVtcERvY0luZm8gPSBtYWtlU3RyaW5nSURhdGFfQXBwbHlTY2hlbWEoIHNv
Y2tldFN0cmluZywgYnl0ZUxlbmd0aCwgcmVjTGlzdFsgMCBdLCBzdGFydE9mZlNldCwgcmVjQ291
bnRGaWVsZE5hbWUsIHJlY0luZGV4ICsgMSwgY2hhcnNldCwgY29udmVydEpzb24sIHBpcGVsaW5l
RGF0YSApOwoJCQkJCQl0ZW1wQ3Vyc29yID0gdGVtcERvY0luZm9bIDEgXS5nZXRDdXJzb3IoKTsK
CQkJCQkJc3RhcnRPZmZTZXQgPSBJRGF0YVV0aWwuZ2V0SW50KCB0ZW1wQ3Vyc29yLCAibmV4dFN0
YXJ0T2ZmU2V0IiwgMCApOwoJCQkJCQkKCQkJCQkJaWYgKCBpID09IDAgKSB7CgkJCQkJCQl0ZW1w
Q3Vyc29yLmRlc3Ryb3koKTsKCQkJCQkJCXRlbXBDdXJzb3IgPSB0ZW1wRG9jSW5mb1sgMiBdLmdl
dEN1cnNvcigpOwoJCQkJCQkJdGVtcFJlY0luZGV4ID0gSURhdGFVdGlsLmdldEludCggdGVtcEN1
cnNvciwgInJlY0luZGV4IiwgMCApOwoJCQkJCQl9CgkJCQkJCQoJCQkJCQlkb2NMaXN0WyBpIF0g
PSB0ZW1wRG9jSW5mb1sgMCBdOwoJCQkJCQkKCQkJCQkJdGVtcEVycm9yQ3Vyc29yID0gdGVtcERv
Y0luZm9bIDMgXS5nZXRDdXJzb3IoKTsKCQkJCQkJdGVtcEVycm9yTXNnID0gSURhdGFVdGlsLmdl
dFN0cmluZyggdGVtcEVycm9yQ3Vyc29yLCAiZXJyb3JNc2ciICk7CgkJCQkJCQoJCQkJCQlpZiAo
ICF0ZW1wRXJyb3JNc2cuZXF1YWxzKCAiIiApICkgewoJCQkJCQkJZXJyb3JNc2cgPSBlcnJvck1z
ZyArICJcbiIgKyB0ZW1wRXJyb3JNc2c7CgkJCQkJCX0KCQkJCQkKCQkJCQkJdGVtcEN1cnNvci5k
ZXN0cm95KCk7CgkJCQkJCXRlbXBFcnJvckN1cnNvci5kZXN0cm95KCk7CgkJCQkJCXRlbXBEb2NJ
bmZvID0gbnVsbDsKCQkJCQl9CgkJCQkJCgkJCQkJLy8gcmVjQ291bnRGaWVsZE5hbWXsnZggSW5k
ZXgg7Kad6rCACgkJCQkJcmVjSW5kZXggPSB0ZW1wUmVjSW5kZXg7CgkJCQkJZG9jQ3Vyc29yLmlu
c2VydEFmdGVyKCBjdXJLZXksIGRvY0xpc3QgKTsKCQkJCX0KCQkJCS8qCgkJCQlpZiAoIHN0YXJ0
T2ZmU2V0ID49IGJ5dGVMZW5ndGggKSB7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCQkqLwoJCQl9CgkJ
fQoJCQoJCS8vIE5leHQgc3RhcnRPZmZTZXQKCQluZXh0Q3Vyc29yLmluc2VydEFmdGVyKCAibmV4
dFN0YXJ0T2ZmU2V0Iiwgc3RhcnRPZmZTZXQgKyAiIiApOwoJCQoJCS8vIHJlY0NvdW50RmllbGRO
YW1lIEluZGV4CgkJcmVjQ291bnRDdXJzb3IuaW5zZXJ0QWZ0ZXIoICJyZWNJbmRleCIsIHJlY0lu
ZGV4ICsgIiIgKTsKCX0gY2F0Y2ggKCBFeGNlcHRpb24gZSApIHsKCQllcnJvck1zZyA9IGUudG9T
dHJpbmcoKTsKCX0KCQoJZXJyb3JDdXJzb3IuaW5zZXJ0QWZ0ZXIoICJlcnJvck1zZyIsIGVycm9y
TXNnICk7CgkKCWN1ci5kZXN0cm95KCk7Cglkb2NDdXJzb3IuZGVzdHJveSgpOwoJaW5wdXRDdXJz
b3IuZGVzdHJveSgpOwoJbmV4dEN1cnNvci5kZXN0cm95KCk7CgllcnJvckN1cnNvci5kZXN0cm95
KCk7CglyZWNDb3VudEN1cnNvci5kZXN0cm95KCk7CgkKCS8vIFNpbmdsZSBSZWNvcmTqsIAg7KG0
7J6s7ZWY7KeAIOyViuqzoCBBcnJheeunjCDsobTsnqztlZjripQg6rK97Jqw7JeQ64qUIG91dHB1
dEN1cnNvcuqwgCBudWxsIOydtOuLpC4KCWlmICggb3V0cHV0Q3Vyc29yICE9IG51bGwgKSB7CgkJ
b3V0cHV0Q3Vyc29yLmRlc3Ryb3koKTsKCX0KCQoJb2JqID0gbnVsbDsKCXJlY0xpc3QgPSBudWxs
OwoJZG9jTGlzdCA9IG51bGw7CglpbklEYXRhID0gbnVsbDsKCW91dElEYXRhID0gbnVsbDsKCWdy
b3VwRGVmID0gbnVsbDsKCQoJZG9jSW5mb1sgMCBdID0gZG9jOwoJZG9jSW5mb1sgMSBdID0gbmV4
dFN0YXJ0OwoJZG9jSW5mb1sgMiBdID0gcmVjQ291bnRJbmRleDsKCWRvY0luZm9bIDMgXSA9IGVy
cm9yOwoJCglyZXR1cm4gZG9jSW5mbzsKfQoKcHVibGljIHN0YXRpYyBTdHJpbmdbXSBtYWtlU3Ry
aW5nVG9TdHJpbmdfQXBwbHlTY2hlbWEoIFN0cmluZyBzb2NrZXRTdHJpbmcsIGludCBieXRlTGVu
Z3RoLCBJRGF0YSBzY2hlbWFEZWYsIGludCBzdGFydE9mZlNldCwgU3RyaW5nW10gcmVjQ291bnRG
aWVsZE5hbWUsIGludCByZWNJbmRleCwgU3RyaW5nIGNoYXJzZXQsIElEYXRhIHBpcGVsaW5lRGF0
YSApIHsKCUlEYXRhQ3Vyc29yIGN1ciA9IHNjaGVtYURlZi5nZXRDdXJzb3IoKTsgLy8gU2NoZW1h
IOygleydmCBJRGF0YQoJU3RyaW5nIGN1cktleSA9IG51bGw7CglPYmplY3Qgb2JqID0gbnVsbDsK
CVN0cmluZyBrZXlWYWx1ZSA9ICIiOyAvLyBGaWVsZOyXkCDrjIDtlZwgU2NoZW1hIOygleydmCBT
dHJpbmcgPT0+IEZpZWxkIExlbmd0aC9QYWRkaW5nIFN0cmluZy9MZWZ0IFBhZGRpbmcsIFJpZ2h0
IFBhZGRpbmcg6rWs67aEL0ZpZWxkIERlc2MvRGF0YSBUeXBlL0xlbmd0aCBDYWxjdWxhdGlvbiBT
dGFydC9GaWVsZCBUeXBlCglTdHJpbmcgZmllbGRWYWx1ZSA9ICIiOwoJU3RyaW5nW10gdG9rZW4g
PSBudWxsOwoJU3RyaW5nIGZpZWxkTGVuZ3RoID0gIiI7CglTdHJpbmcgZmllbGRUeXBlID0gIiI7
CglTdHJpbmcgcmVhbEZpZWxkVHlwZSA9ICIiOwoJU3RyaW5nIHZhbHVlVHlwZSA9ICIiOwoJU3Ry
aW5nW10gc3ZjSW5mbyA9IG51bGw7CglTdHJpbmdbXSBvdFRva2VuID0gbnVsbDsKCUlEYXRhW10g
cmVjTGlzdCA9IG51bGw7CglTdHJpbmdbXSByZWNDb3VudEZpZWxkUGF0aCA9IG51bGw7CglTdHJp
bmcgYXJyYXlDb3VudEZpZWxkTmFtZSA9ICIiOwoJU3RyaW5nIHJlY0NvdW50VmFsdWUgPSBudWxs
OwoJaW50IGZpZWxkTGVuID0gMDsKCWludCByZWNDb3VudCA9IDA7IC8vIFJlY29yZCDqsK/siJgK
CQoJSURhdGEgZG9jID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJSURhdGFDdXJzb3IgZG9jQ3Vy
c29yID0gZG9jLmdldEN1cnNvcigpOwoJU3RyaW5nW10gZG9jSW5mbyA9IG5ldyBTdHJpbmdbIDQg
XTsKCVN0cmluZ0J1ZmZlciBzdHJCdWZmZXIgPSBuZXcgU3RyaW5nQnVmZmVyKCk7CglTdHJpbmcg
dGFyZ2V0U29ja2V0U3RyaW5nID0gIiI7CglTdHJpbmdbXSB0ZW1wRG9jSW5mbyA9IG51bGw7CgkK
CUlEYXRhIGdyb3VwRGVmID0gbnVsbDsgLy8gU2luZ2xlIFJlY29yZCDqtazsobDsnZggR3JvdXAg
SURhdGEKCWludCB0ZW1wUmVjSW5kZXggPSAwOwoJU3RyaW5nIGVycm9yTXNnID0gIiI7CglTdHJp
bmcgdGVtcEVycm9yTXNnID0gIiI7CgkKCUlEYXRhIGluSURhdGEgPSBJRGF0YUZhY3RvcnkuY3Jl
YXRlKCk7CglJRGF0YUN1cnNvciBpbnB1dEN1cnNvciA9IGluSURhdGEuZ2V0Q3Vyc29yKCk7CglJ
RGF0YSBvdXRJRGF0YSA9IG51bGw7CglJRGF0YUN1cnNvciBvdXRwdXRDdXJzb3IgPSBudWxsOwoJ
Cgl0cnkgewoJCXdoaWxlICggY3VyLm5leHQoKSApIHsKCQkJY3VyS2V5ID0gY3VyLmdldEtleSgp
OwoJCQlvYmogPSBjdXIuZ2V0VmFsdWUoKTsKCgkJCWlmICggb2JqID09IG51bGwgKSB7CgkJCQlj
b250aW51ZTsKCQkJfSBlbHNlIGlmICggb2JqIGluc3RhbmNlb2YgU3RyaW5nICkgeyAvLyBvYmog
aXMgU3RyaW5nCgkJCQlrZXlWYWx1ZSA9ICggU3RyaW5nIClvYmo7CgkJCQkKCQkJCXRva2VuID0g
a2V5VmFsdWUuc3BsaXQoICIvIiApOwoJCQkJZmllbGRMZW5ndGggPSB0b2tlblsgMCBdOwoJCQkJ
ZmllbGRUeXBlID0gdG9rZW5bIDYgXTsKCQkJCW90VG9rZW4gPSBmaWVsZFR5cGUuc3BsaXQoICJc
XCQiICk7CgkJCQlyZWFsRmllbGRUeXBlID0gb3RUb2tlblsgMCBdLnRyaW0oKS50b1VwcGVyQ2Fz
ZSgpOwoJCQkJCgkJCQkvKiAKCQkJCSAqIHJlYWxGaWVsZFR5cGUKCQkJCSAqIFNUIDogRmllbGTq
sIAgU291cmNlLCBUYXJnZXTsl5Ag66qo65GQIOyhtOyerO2VmOuKlCDqsr3smrAgPT0+IFNvdXJj
ZeyXkOyEnCBWYWx1ZSDstpTstpwsIFRhcmdldOyXkCBGaWVsZCDsg53shLEg67CPIFZhbHVlIOun
pO2VkQoJCQkJICogT1MgOiBGaWVsZOqwgCBTb3VyY2Xsl5Drp4wg7KG07J6s7ZWY6rOgIFRhcmdl
dOyXkOuKlCAg7KG07J6s7ZWY7KeAIOyViuuKlCDqsr3smrAgPT0+IFNvdXJjZeyXkOyEnCBWYWx1
ZSDstpTstpwsIFRhcmdldOyXkCBGaWVsZCDsg53shLEg67CPIFZhbHVlIOunpO2VkSDsg53rnrUK
CQkJCSAqIE9UIDogRmllbGTqsIAgVGFyZ2V07JeQ66eMIOyhtOyerO2VmOqzoCBTb3VyY2Xsl5Dr
ipQgIOyhtOyerO2VmOyngCDslYrripQg6rK97JqwID09PiBTb3VyY2Xsl5DshJwgVmFsdWUg7LaU
7LacIOyDneuetSwgVGFyZ2V07JeQIEZpZWxkIOyDneyEsSDrsI8gVmFsdWUg66ek7ZWRCQkJCQkg
CgkJCQkgKi8KCQkJCQoJCQkJLy8gU291cmNl7JeQ7IScIFZhbHVlIOy2lOy2nAoJCQkJaWYgKCBy
ZWFsRmllbGRUeXBlLmVxdWFscyggIlNUIiApIHx8IHJlYWxGaWVsZFR5cGUuZXF1YWxzKCAiT1Mi
ICkgKSB7CgkJCQkJdHJ5IHsKCQkJCQkJLy8gZmllbGRMZW5ndGjsl5Ag7Iuk7KCc66GcIEZpZWxk
7J2YIOq4uOydtCDsoJXrs7TqsIAg7J6I64qUIOqyveyasCA9PT4gRmllbGTqsIAg6rOg7KCV6ri4
7J207J24IOqyveyasAoJCQkJCQlmaWVsZExlbiA9IEludGVnZXIucGFyc2VJbnQoIGZpZWxkTGVu
Z3RoICk7CgkJCQkJfSBjYXRjaCAoIEV4Y2VwdGlvbiBpZSApIHsKCQkJCQkJLy8gZmllbGRMZW5n
dGjsl5AgRmllbGTsnZgg6ri47J20IOygleuztOulvCDtj6ztlajtlZjripQgRmllbGTrqoUg7KCV
67O06rCAIOyeiOuKlCDqsr3smrAgPT0+IEZpZWxk6rCAIOqwgOuzgOq4uOydtOyduCDqsr3smrAK
CQkJCQkJZmllbGRMZW5ndGggPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKCBkb2NDdXJzb3IsIGZpZWxk
TGVuZ3RoICkudHJpbSgpOwoJCQkJCQlmaWVsZExlbiA9IEludGVnZXIucGFyc2VJbnQoIGZpZWxk
TGVuZ3RoICk7CgkJCQkJCQoJCQkJCQkvLyBJRGF0YVV0aWwuZ2V0U3RyaW5nIOyLpO2WiSDsi5wg
IEN1cnNvciDsnITsuZjqsIAg7J2064+Z7ZaI7J2EIOyImCDsnojquLAg65WM66y47JeQIOuLpOyL
nCDrp4jsp4Drp4kg7JyE7LmY66GcIEN1cnNvcuulvCDsnbTrj5nsi5ztgqjri6QuCgkJCQkJCWRv
Y0N1cnNvci5sYXN0KCk7CgkJCQkJfQoJCgkJCQkJSURhdGFVdGlsLnB1dCggaW5wdXRDdXJzb3Is
ICJpblN0cmluZyIsIHNvY2tldFN0cmluZyApOwoJCQkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vy
c29yLCAic3RhcnRPZmZzZXQiLCBzdGFydE9mZlNldCArICIiICk7CgkJCQkJSURhdGFVdGlsLnB1
dCggaW5wdXRDdXJzb3IsICJsZW5ndGgiLCBmaWVsZExlbmd0aCApOwoJCQkJCUlEYXRhVXRpbC5w
dXQoIGlucHV0Q3Vyc29yLCAiY2hhcnNldCIsIGNoYXJzZXQgKTsKCQkJCQoJCQkJCW91dElEYXRh
ID0gU2VydmljZS5kb0ludm9rZSggIkpTb2NrZXRBZGFwdGVyLkNPTU1PTi5VVElMLlNUUklORyIs
ICJzdWJzdHJpbmdCeUJ5dGVzIiwgaW5JRGF0YSApOwoJCQkJCW91dHB1dEN1cnNvciA9IG91dElE
YXRhLmdldEN1cnNvcigpOwoJCQkJCWZpZWxkVmFsdWUgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKCBv
dXRwdXRDdXJzb3IsICJvdXRTdHJpbmciICk7CgkJCQl9IGVsc2UgaWYgKCByZWFsRmllbGRUeXBl
LmVxdWFscyggIk9UIiApICkgewkJCQkJCQoJCQkJCS8vIE9UJEZWJFZhbHVlIDog6rOg7KCV6rCS
7J24IOqyveyasCA9PT4gVmFsdWUg67aA67aE7JeQIOyeiOuKlCDqsJLsnbQgVmFsdWXqsIAg65Cc
64ukLgoJCQkJCS8vIE9UJFZWJFNlcnZpY2UgRnVsbCBOYW1lIDog6rCA67OA6rCS7J24IOqyveya
sCA9PT4gU2VydmljZSBGdWxsIE5hbWXsnYQg7Zi47Lac7ZW07IScIFZhbHVl66W8IOq1rO2VnOuL
pC4KCQkJCQlmaWVsZExlbiA9IDA7CgkJCQkJdmFsdWVUeXBlID0gb3RUb2tlblsgMSBdLnRyaW0o
KS50b1VwcGVyQ2FzZSgpOwoJCQkJCQoJCQkJCWlmICggdmFsdWVUeXBlLmVxdWFscyggIkZWIiAp
ICkgewoJCQkJCQlmaWVsZFZhbHVlID0gb3RUb2tlblsgMiBdOwoJCQkJCX0gZWxzZSBpZiAoIHZh
bHVlVHlwZS5lcXVhbHMoICJWViIgKSApIHsKCQkJCQkJc3ZjSW5mbyA9IG90VG9rZW5bIDIgXS50
cmltKCkuc3BsaXQoICI6IiApOwoJCQkJCQlJRGF0YVV0aWwucHV0KCBpbnB1dEN1cnNvciwgInBp
cGVsaW5lRGF0YSIsIHBpcGVsaW5lRGF0YSApOwoJCQkJCQlvdXRJRGF0YSA9IFNlcnZpY2UuZG9J
bnZva2UoIHN2Y0luZm9bIDAgXSwgc3ZjSW5mb1sgMSBdLCBpbklEYXRhICk7CgkJCQkJCW91dHB1
dEN1cnNvciA9IG91dElEYXRhLmdldEN1cnNvcigpOwoJCQkJCQlmaWVsZFZhbHVlID0gSURhdGFV
dGlsLmdldFN0cmluZyggb3V0cHV0Q3Vyc29yLCAib3V0VmFsdWUiICk7CgkJCQkJfQoJCQkJfQoJ
CQkJCgkJCQkvLyBJRGF0YeyXkCDsnoTsi5zroZwg7KCA7J6lID09PiBBcnJheSBDb3VudCDqsJIg
6rWs7ZWgIOuVjCDsgqzsmqntlZzri6QuCgkJCQlkb2NDdXJzb3IuaW5zZXJ0QWZ0ZXIoIGN1cktl
eSwgZmllbGRWYWx1ZSApOwoJCQkJCgkJCQkvLyBUYXJnZXQgVmFsdWUgQXBwZW5kCgkJCQlpZiAo
IHJlYWxGaWVsZFR5cGUuZXF1YWxzKCAiU1QiICkgfHwgcmVhbEZpZWxkVHlwZS5lcXVhbHMoICJP
VCIgKSApIHsJCQkJCQoJCQkJCXN0ckJ1ZmZlci5hcHBlbmQoIGZpZWxkVmFsdWUgKTsKCQkJCX0K
CQkJCQoJCQkJLy8gTmV4dCBzdGFydE9mZlNldAoJCQkJc3RhcnRPZmZTZXQgPSBzdGFydE9mZlNl
dCArIGZpZWxkTGVuOwoJCQkJLyoKCQkJCWlmICggc3RhcnRPZmZTZXQgPj0gYnl0ZUxlbmd0aCAp
IHsKCQkJCQlicmVhazsKCQkJCX0KCQkJCSovCgkJCX0gZWxzZSBpZiAoIG9iaiBpbnN0YW5jZW9m
IElEYXRhICkgeyAvLyBvYmogaXMgSURhdGEKCQkJCWdyb3VwRGVmID0gKCBJRGF0YSApb2JqOwoJ
CQkJdGVtcERvY0luZm8gPSBtYWtlU3RyaW5nVG9TdHJpbmdfQXBwbHlTY2hlbWEoIHNvY2tldFN0
cmluZywgYnl0ZUxlbmd0aCwgZ3JvdXBEZWYsIHN0YXJ0T2ZmU2V0LCByZWNDb3VudEZpZWxkTmFt
ZSwgcmVjSW5kZXgsIGNoYXJzZXQsIHBpcGVsaW5lRGF0YSApOwoJCQkJCgkJCQlzdHJCdWZmZXIu
YXBwZW5kKCB0ZW1wRG9jSW5mb1sgMCBdICk7CgkJCQlzdGFydE9mZlNldCA9IEludGVnZXIucGFy
c2VJbnQoIHRlbXBEb2NJbmZvWyAxIF0gKTsKCQkJCXRlbXBSZWNJbmRleCA9IEludGVnZXIucGFy
c2VJbnQoIHRlbXBEb2NJbmZvWyAyIF0gKTsKCQkJCXRlbXBFcnJvck1zZyA9IHRlbXBEb2NJbmZv
WyAzIF07CgkJCQkKCQkJCWlmICggIXRlbXBFcnJvck1zZy5lcXVhbHMoICIiICkgKSB7CgkJCQkJ
ZXJyb3JNc2cgPSBlcnJvck1zZyArICJcbiIgKyB0ZW1wRXJyb3JNc2c7CgkJCQl9CgkJCQkKCQkJ
CS8vIHJlY0NvdW50RmllbGROYW1l7J2YIEluZGV4IOymneqwgAoJCQkJcmVjSW5kZXggPSB0ZW1w
UmVjSW5kZXg7CQkJCQkKCQkJCQoJCQkJdGVtcERvY0luZm8gPSBudWxsOwoJCQkJZ3JvdXBEZWYg
PSBudWxsOwoJCQl9IGVsc2UgaWYgKCBvYmogaW5zdGFuY2VvZiBJRGF0YVtdICkgeyAvLyBvYmog
aXMgSURhdGFbXQoJCQkJcmVjTGlzdCA9ICggSURhdGFbXSApb2JqOwoJCQkJCgkJCQlpZiAoIHJl
Y0xpc3QgPT0gbnVsbCApIHsKCQkJCQljb250aW51ZTsKCQkJCX0KCQkJCQoJCQkJLy8gUmVjb3Jk
IOqwr+yImCDstpTstpwKCQkJCWlmICggcmVjQ291bnRGaWVsZE5hbWUgPT0gbnVsbCB8fCByZWND
b3VudEZpZWxkTmFtZS5sZW5ndGggPT0gMCApIHsKCQkJCQkvLyDtlZjrgpjsnZggQXJyYXnrp4wg
7J6I64qUIO2PrOunt+ydtOuptOyEnCDqsIDrs4DquLjsnbTsnbTqs6AgQXJyYXkgQ291bnTrpbwg
7Y+s7ZWo7ZWY64qUIO2VhOuTnOqwgCDsl4bripQg7KCE66y47J24IOqyveyasCBBcnJheSBDb3Vu
dOulvCDqtaztlZzri6QuCgkJCQkJcmVjQ291bnQgPSBnZXRBcnJheUNvdW50KCBzb2NrZXRTdHJp
bmcsIHNjaGVtYURlZiwgY2hhcnNldCApOwoJCQkJfSBlbHNlIHsKCQkJCQkvLyAyMDIyLjA4LjA1
IOyImOyglS4gQXJyYXkgQ291bnTrpbwg7Y+s7ZWo7ZWY6rOgIOyeiOuKlCDtlYTrk5zqsIAgUGF0
aCDtmJXtg5zroZwg67CU64CM7Ja07IScIO2VhOuTnOuqheunjCDrvZHripQg7LKY66as66W8IOyI
mO2Wie2VqC4KCQkJCQkvL3JlY0NvdW50VmFsdWUgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKCBkb2ND
dXJzb3IsIHJlY0NvdW50RmllbGROYW1lWyByZWNJbmRleCBdICk7CgkJCQkJcmVjQ291bnRGaWVs
ZFBhdGggPSByZWNDb3VudEZpZWxkTmFtZVsgcmVjSW5kZXggXS5zcGxpdCggIi8iICk7CgkJCQkJ
YXJyYXlDb3VudEZpZWxkTmFtZSA9IHJlY0NvdW50RmllbGRQYXRoWyByZWNDb3VudEZpZWxkUGF0
aC5sZW5ndGggLSAxIF07CgkJCQkJcmVjQ291bnRWYWx1ZSA9IElEYXRhVXRpbC5nZXRTdHJpbmco
IGRvY0N1cnNvciwgYXJyYXlDb3VudEZpZWxkTmFtZSApOwoJCQkJCQoJCQkJCWlmICggcmVjQ291
bnRWYWx1ZSA9PSBudWxsICkgewoJCQkJCQkvLyDroIjsvZTrk5wg6rCv7IiY6rCAIO2PrO2VqOuQ
nCBGaWVsZOydmCBOYW1l7J20IOyVhOuLiOqzoCDroIjsvZTrk5zsnZgg6rCv7IiY66W8IOyngeyg
kSDsoITri6wg67Cb7J2AIOqyveyasCA9PT4g6rOg7KCV6ri47J20CgkJCQkJCXJlY0NvdW50ID0g
SW50ZWdlci5wYXJzZUludCggcmVjQ291bnRGaWVsZE5hbWVbIHJlY0luZGV4IF0udHJpbSgpICk7
CgkJCQkJfSBlbHNlIHsKCQkJCQkJLy8g66CI7L2U65OcIOqwr+yImOqwgCDtj6ztlajrkJwgRmll
bGTsnZggTmFtZeydhCDsoITri6wg67Cb7J2AIOqyveyasCA9PT4g6rCA67OA6ri47J20CgkJCQkJ
CXJlY0NvdW50ID0gSW50ZWdlci5wYXJzZUludCggcmVjQ291bnRWYWx1ZS50cmltKCkgKTsKCQkJ
CQl9CgkJCQl9CgkJCQkKCQkJCWlmICggcmVjQ291bnQgPT0gMCApIHsKCQkJCQkvLyByZWNDb3Vu
dEZpZWxkTmFtZeydmCBJbmRleCDspp3qsIAKCQkJCQlyZWNJbmRleCArPSAxOwoJCQkJfSBlbHNl
IHsKCQkJCQlmb3IgKCBpbnQgaSA9IDA7IGkgPCByZWNDb3VudDsgaSsrICkgewoJCQkJCQl0ZW1w
RG9jSW5mbyA9IG1ha2VTdHJpbmdUb1N0cmluZ19BcHBseVNjaGVtYSggc29ja2V0U3RyaW5nLCBi
eXRlTGVuZ3RoLCByZWNMaXN0WyAwIF0sIHN0YXJ0T2ZmU2V0LCByZWNDb3VudEZpZWxkTmFtZSwg
cmVjSW5kZXggKyAxLCBjaGFyc2V0LCBwaXBlbGluZURhdGEgKTsKCQkJCQkJCgkJCQkJCXN0ckJ1
ZmZlci5hcHBlbmQoIHRlbXBEb2NJbmZvWyAwIF0gKTsKCQkJCQkJc3RhcnRPZmZTZXQgPSBJbnRl
Z2VyLnBhcnNlSW50KCB0ZW1wRG9jSW5mb1sgMSBdICk7CgkJCQkJCQoJCQkJCQlpZiAoIGkgPT0g
MCApIHsKCQkJCQkJCXRlbXBSZWNJbmRleCA9IEludGVnZXIucGFyc2VJbnQoIHRlbXBEb2NJbmZv
WyAyIF0gKTsKCQkJCQkJfQoJCQkJCQkKCQkJCQkJdGVtcEVycm9yTXNnID0gdGVtcERvY0luZm9b
IDMgXTsKCQkJCQkJCgkJCQkJCWlmICggIXRlbXBFcnJvck1zZy5lcXVhbHMoICIiICkgKSB7CgkJ
CQkJCQllcnJvck1zZyA9IGVycm9yTXNnICsgIlxuIiArIHRlbXBFcnJvck1zZzsKCQkJCQkJfQoJ
CQkJCQoJCQkJCQl0ZW1wRG9jSW5mbyA9IG51bGw7CgkJCQkJfQoJCQkJCQoJCQkJCS8vIHJlY0Nv
dW50RmllbGROYW1l7J2YIEluZGV4IOymneqwgAoJCQkJCXJlY0luZGV4ID0gdGVtcFJlY0luZGV4
OwoJCQkJfQoJCQkJLyoKCQkJCWlmICggc3RhcnRPZmZTZXQgPj0gYnl0ZUxlbmd0aCApIHsKCQkJ
CQlicmVhazsKCQkJCX0KCQkJCSovCgkJCX0KCQl9CgkJCgkJdGFyZ2V0U29ja2V0U3RyaW5nID0g
c3RyQnVmZmVyLnRvU3RyaW5nKCk7Cgl9IGNhdGNoICggRXhjZXB0aW9uIGUgKSB7CgkJZXJyb3JN
c2cgPSBlLnRvU3RyaW5nKCk7Cgl9CgkJCQoJY3VyLmRlc3Ryb3koKTsKCWRvY0N1cnNvci5kZXN0
cm95KCk7CglpbnB1dEN1cnNvci5kZXN0cm95KCk7CgkKCS8vIFNpbmdsZSBSZWNvcmTqsIAg7KG0
7J6s7ZWY7KeAIOyViuqzoCBBcnJheeunjCDsobTsnqztlZjripQg6rK97Jqw7JeQ64qUIG91dHB1
dEN1cnNvcuqwgCBudWxsIOydtOuLpC4KCWlmICggb3V0cHV0Q3Vyc29yICE9IG51bGwgKSB7CgkJ
b3V0cHV0Q3Vyc29yLmRlc3Ryb3koKTsKCX0KCQoJb2JqID0gbnVsbDsKCXJlY0xpc3QgPSBudWxs
OwoJaW5JRGF0YSA9IG51bGw7CglvdXRJRGF0YSA9IG51bGw7Cglncm91cERlZiA9IG51bGw7CgkK
CWRvY0luZm9bIDAgXSA9IHRhcmdldFNvY2tldFN0cmluZzsKCWRvY0luZm9bIDEgXSA9IHN0YXJ0
T2ZmU2V0ICsgIiI7Cglkb2NJbmZvWyAyIF0gPSByZWNJbmRleCArICIiOwoJZG9jSW5mb1sgMyBd
ID0gZXJyb3JNc2c7CgkKCXJldHVybiBkb2NJbmZvOwp9CgpwdWJsaWMgc3RhdGljIGludCBnZXRB
cnJheUNvdW50KCBTdHJpbmcgc29ja2V0U3RyaW5nLCBJRGF0YSBzY2hlbWFEZWYsIFN0cmluZyBj
aGFyc2V0ICkgewkJCgkvLyDtlZjrgpjsnZggQXJyYXnrp4wg7J6I64qUIO2PrOunt+ydtOuptOyE
nCDqsIDrs4DquLjsnbTsnbTqs6AgQXJyYXkgQ291bnTrpbwg7Y+s7ZWo7ZWY64qUIO2VhOuTnOqw
gCDsl4bripQg7KCE66y47J24IOqyveyasCBBcnJheSBDb3VudOulvCDqtaztlZzri6QuCglJRGF0
YSBpbklEYXRhID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJSURhdGFDdXJzb3IgaW5wdXRDdXJz
b3IgPSBpbklEYXRhLmdldEN1cnNvcigpOwoJSURhdGEgb3V0SURhdGEgPSBudWxsOwoJSURhdGFD
dXJzb3Igb3V0cHV0Q3Vyc29yID0gbnVsbDsKCVN0cmluZyByZWNMZW5ndGhTdW0gPSAiIjsKCVN0
cmluZyBkb2NMZW5ndGggPSAiIjsKCWludCBhcnJheUNvdW50ID0gMDsKCQoJdHJ5IHsKCQkvLyDt
lZwg66CI7L2U65Oc7J2YIO2VhOuTnOq4uOydtCDtlakg6rWs7ZWY6riwCgkJSURhdGFVdGlsLnB1
dCggaW5wdXRDdXJzb3IsICJzY2hlbWFEZWYiLCBzY2hlbWFEZWYgKTsKCQlJRGF0YVV0aWwucHV0
KCBpbnB1dEN1cnNvciwgInN0YXJ0SW5kZXgiLCAiMCIgKTsKCQkKCQlvdXRJRGF0YSA9IFNlcnZp
Y2UuZG9JbnZva2UoICJKU29ja2V0QWRhcHRlci5VVElMIiwgImdldEZpZWxkc0xlbmd0aFN1bSIs
IGluSURhdGEgKTsKCQlvdXRwdXRDdXJzb3IgPSBvdXRJRGF0YS5nZXRDdXJzb3IoKTsKCQlyZWNM
ZW5ndGhTdW0gPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKCBvdXRwdXRDdXJzb3IsICJsZW5ndGhTdW0i
ICk7CgkJCgkJb3V0cHV0Q3Vyc29yLmRlc3Ryb3koKTsKCQlvdXRJRGF0YSA9IG51bGw7CgkJCgkJ
Ly8g7KCE66y4IOyghOyytCDquLjsnbQg6rWs7ZWY6riwCgkJaW5wdXRDdXJzb3IuZGVzdHJveSgp
OwoJCWluSURhdGEgPSBudWxsOwoJCWluSURhdGEgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJ
aW5wdXRDdXJzb3IgPSBpbklEYXRhLmdldEN1cnNvcigpOwoJCQoJCUlEYXRhVXRpbC5wdXQoIGlu
cHV0Q3Vyc29yLCAiY29udGVudCIsIHNvY2tldFN0cmluZyApOwoJCUlEYXRhVXRpbC5wdXQoIGlu
cHV0Q3Vyc29yLCAiY2hhcnNldCIsIGNoYXJzZXQgKTsKCQkKCQlvdXRJRGF0YSA9IFNlcnZpY2Uu
ZG9JbnZva2UoICJKU29ja2V0QWRhcHRlci5DT01NT04uVVRJTC5TVFJJTkciLCAiZ2V0Qnl0ZUxl
bmd0aCIsIGluSURhdGEgKTsKCQlvdXRwdXRDdXJzb3IgPSBvdXRJRGF0YS5nZXRDdXJzb3IoKTsK
CQlkb2NMZW5ndGggPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKCBvdXRwdXRDdXJzb3IsICJieXRlTGVu
Z3RoIiApOwoJCQoJCS8vIEFycmF5IENvdW50IOq1rO2VmOq4sAoJCWFycmF5Q291bnQgPSBJbnRl
Z2VyLnBhcnNlSW50KCBkb2NMZW5ndGggKSAvIEludGVnZXIucGFyc2VJbnQoIHJlY0xlbmd0aFN1
bSApOwoJfSBjYXRjaCAoIEV4Y2VwdGlvbiBlICkgewoJCQoJfQoJCglyZXR1cm4gYXJyYXlDb3Vu
dDsKfQoKcHVibGljIHN0YXRpYyBTdHJpbmcgbWFrZVNjaGVtYUxpc3QoIElEYXRhIHNjaGVtYURl
ZiwgU3RyaW5nIHNpbmdsZUFycmF5ICkgewoJSURhdGFDdXJzb3IgY3VyID0gc2NoZW1hRGVmLmdl
dEN1cnNvcigpOyAvLyBTY2hlbWEg7KCV7J2YIElEYXRhCglTdHJpbmcgY3VyS2V5ID0gbnVsbDsK
CU9iamVjdCBvYmogPSBudWxsOwoJU3RyaW5nIGtleVZhbHVlID0gIiI7IC8vIEZpZWxk7JeQIOuM
gO2VnCBTY2hlbWEg7KCV7J2YIFN0cmluZyA9PT4gRmllbGQgTGVuZ3RoL1BhZGRpbmcgU3RyaW5n
L0xlZnQgUGFkZGluZywgUmlnaHQgUGFkZGluZyDqtazrtoQvRmllbGQgRGVzYy9EYXRhIFR5cGUv
TGVuZ3RoIENhbGN1bGF0aW9uIFN0YXJ0L0ZpZWxkIFR5cGUKCUlEYXRhW10gcmVjTGlzdCA9IG51
bGw7CglTdHJpbmdCdWZmZXIgc3RyQnVmZmVyID0gbmV3IFN0cmluZ0J1ZmZlcigpOwoJU3RyaW5n
IHNjaGVtYSA9ICIiOwoJU3RyaW5nIHNjaGVtYUxpc3QgPSAiIjsKCS8vIHNpbmdsZUFycmF5ID09
PiBTIDogU2luZ2xlIFJlY29yZOydmCDtlYTrk5wsIEEgOiBBcnJheSBSZWNvcmTsnZgg7ZWE65Oc
CgkKCXRyeSB7CgkJd2hpbGUgKCBjdXIubmV4dCgpICkgewoJCQljdXJLZXkgPSBjdXIuZ2V0S2V5
KCk7CgkJCW9iaiA9IGN1ci5nZXRWYWx1ZSgpOwoKCQkJaWYgKCBvYmogPT0gbnVsbCApIHsKCQkJ
CWNvbnRpbnVlOwoJCQl9IGVsc2UgaWYgKCBvYmogaW5zdGFuY2VvZiBTdHJpbmcgKSB7IC8vIG9i
aiBpcyBTdHJpbmcKCQkJCWtleVZhbHVlID0gKCBTdHJpbmcgKW9iajsKCQkJCWtleVZhbHVlID0g
c2luZ2xlQXJyYXkgKyAiLyIgKyBjdXJLZXkgKyAiLyIgKyBrZXlWYWx1ZTsKCQkJCQoJCQkJaWYg
KCBzY2hlbWFMaXN0LmVxdWFscyggIiIgKSApIHsKCQkJCQlzdHJCdWZmZXIuYXBwZW5kKCBrZXlW
YWx1ZSApOwoJCQkJCXNjaGVtYUxpc3QgPSAiTkUiOyAvLyBOb3QgRW1wdHkKCQkJCX0gZWxzZSB7
CgkJCQkJc3RyQnVmZmVyLmFwcGVuZCggInwiICsga2V5VmFsdWUgKTsKCQkJCX0KCQkJfSBlbHNl
IGlmICggb2JqIGluc3RhbmNlb2YgSURhdGEgKSB7IC8vIG9iaiBpcyBJRGF0YQoJCQkJLy8gR3Jv
dXDsnLzroZwg66y264qUIOqyveyasAoJCQkJc2NoZW1hID0gbWFrZVNjaGVtYUxpc3QoICggSURh
dGEgKW9iaiwgIlMiICk7CgkJCQkKCQkJCWlmICggc2NoZW1hTGlzdC5lcXVhbHMoICIiICkgKSB7
CgkJCQkJc3RyQnVmZmVyLmFwcGVuZCggc2NoZW1hICk7CgkJCQkJc2NoZW1hTGlzdCA9ICJORSI7
IC8vIE5vdCBFbXB0eQoJCQkJfSBlbHNlIHsKCQkJCQlzdHJCdWZmZXIuYXBwZW5kKCAifCIgKyBz
Y2hlbWEgKTsKCQkJCX0KCQkJfSBlbHNlIGlmICggb2JqIGluc3RhbmNlb2YgSURhdGFbXSApIHsg
Ly8gb2JqIGlzIElEYXRhW10KCQkJCXJlY0xpc3QgPSAoIElEYXRhW10gKW9iajsKCQkJCQoJCQkJ
aWYgKCByZWNMaXN0ID09IG51bGwgKSB7CgkJCQkJY29udGludWU7CgkJCQl9CgkJCQkKCQkJCXNj
aGVtYSA9IG1ha2VTY2hlbWFMaXN0KCByZWNMaXN0WyAwIF0sICJBIiApOwoJCQkJCgkJCQlpZiAo
IHNjaGVtYUxpc3QuZXF1YWxzKCAiIiApICkgewoJCQkJCXN0ckJ1ZmZlci5hcHBlbmQoIHNjaGVt
YSApOwoJCQkJCXNjaGVtYUxpc3QgPSAiTkUiOyAvLyBOb3QgRW1wdHkKCQkJCX0gZWxzZSB7CgkJ
CQkJc3RyQnVmZmVyLmFwcGVuZCggInwiICsgc2NoZW1hICk7CgkJCQl9CgkJCX0KCQl9CgkJCgkJ
c2NoZW1hTGlzdCA9IHN0ckJ1ZmZlci50b1N0cmluZygpOwoJfSBjYXRjaCAoIEV4Y2VwdGlvbiBl
ICkgewoJCQoJfQkJCgkKCXJldHVybiBzY2hlbWFMaXN0Owp9CgpwdWJsaWMgc3RhdGljIFN0cmlu
Z1tdIG1ha2VJRGF0YVN0cmluZ19BcHBseVNjaGVtYSggSURhdGEgaURhdGEsIFN0cmluZ1tdIHNj
aGVtYUxpc3QsIGludCBzY2hlbWFJbmRleCwgU3RyaW5nIGNoYXJzZXQsIFN0cmluZyBzaW5nbGVB
cnJheSwgU3RyaW5nIHBhcmFtQWRkRG9jTGVuLCBJRGF0YSBwaXBlbGluZURhdGEsIFN0cmluZyBm
aXJzdEludm9rZSApIHsKCVN0cmluZyBjdXJLZXkgPSBudWxsOwoJT2JqZWN0IG9iaiA9IG51bGw7
CglTdHJpbmcga2V5VmFsdWUgPSAiIjsKCUlEYXRhW10gaURhdGFMaXN0ID0gbnVsbDsKCUlEYXRh
Q3Vyc29yIGN1ciA9IGlEYXRhLmdldEN1cnNvcigpOwoJU3RyaW5nQnVmZmVyIHN0ckJ1ZmZlciA9
IG5ldyBTdHJpbmdCdWZmZXIoKTsKCVN0cmluZ1tdIGlEYXRhU3RyaW5nID0gbmV3IFN0cmluZ1sg
NyBdOwoJU3RyaW5nW10gdG9rZW4gPSBudWxsOwoJU3RyaW5nIHNjaGVtYVNpbmdsZUFycmF5ID0g
IiI7CglTdHJpbmcgZmllbGROYW1lID0gIiI7CglTdHJpbmcgZmllbGRMZW5ndGggPSAiIjsKCVN0
cmluZyBwYWRkaW5nQ2hhciA9ICIiOwoJU3RyaW5nIHBhZGRpbmdUeXBlID0gIiI7CglTdHJpbmcg
Ynl0ZUxlbmd0aCA9ICIiOwoJU3RyaW5nIGxlbmd0aFN0YXJ0SW5mbyA9ICIiOwoJU3RyaW5nIGFk
ZERvY0xlbiA9IHBhcmFtQWRkRG9jTGVuOwoJaW50IGxlbmd0aFN0YXJ0SW5kZXggPSAwOwoJaW50
IGxlbmd0aEZpZWxkTGVuID0gMDsKCVN0cmluZyBsZW5ndGhMb2NUeXBlID0gIiI7CglTdHJpbmcg
Y3VyTGVuZ3RoTG9jVHlwZSA9ICIiOwoJU3RyaW5nIGZpZWxkVHlwZSA9ICIiOwoJU3RyaW5nIHJl
YWxGaWVsZFR5cGUgPSAiIjsKCVN0cmluZyB2YWx1ZVR5cGUgPSAiIjsKCVN0cmluZyBvdFZhbHVl
ID0gIiI7CglTdHJpbmdbXSBsZW5ndGhUb2tlbiA9IG51bGw7CglTdHJpbmdbXSBzdmNJbmZvID0g
bnVsbDsKCVN0cmluZ1tdIG90VG9rZW4gPSBudWxsOwoJU3RyaW5nIGRvY0xlbiA9ICIiOwoJaW50
IGRvY1RvdGFsTGVuID0gMDsKCWludCBmaWVsZExlbiA9IDA7CglpbnQgYnl0ZUxlbiA9IDA7Cglp
bnQgcGFkZGluZ0xlbmd0aCA9IDA7CglpbnQgb3RJbmRleCA9IDA7CglTdHJpbmcgcGFkZGluZ1N0
cmluZyA9ICIiOwoJU3RyaW5nW10gc3RySW5kZXggPSBudWxsOwoJU3RyaW5nIGVycm9yTXNnID0g
IiI7CgkKCUlEYXRhIGluSURhdGEgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CglJRGF0YUN1cnNv
ciBpbnB1dEN1cnNvciA9IGluSURhdGEuZ2V0Q3Vyc29yKCk7CglJRGF0YSBvdXRJRGF0YSA9IG51
bGw7CglJRGF0YUN1cnNvciBvdXRwdXRDdXJzb3IgPSBudWxsOwoJCglTdHJpbmcgc29ja2V0U3Ry
aW5nID0gIiI7CglTdHJpbmcgYmVmb3JlTGVuZ3RoTG9jID0gIiI7CglTdHJpbmcgYWZ0ZXJMZW5n
dGhMb2MgPSAiIjsKCUlEYXRhIGdyb3VwRG9jID0gbnVsbDsgLy8gU2luZ2xlIFJlY29yZCDqtazs
obDsnZggR3JvdXAgSURhdGEKCQoJdHJ5IHsKCQl3aGlsZSAoIGN1ci5uZXh0KCkgKSB7CgkJCWN1
cktleSA9IGN1ci5nZXRLZXkoKTsKCQkJb2JqID0gY3VyLmdldFZhbHVlKCk7CgoJCQlpZiAoIG9i
aiA9PSBudWxsICkgewoJCQkJY29udGludWU7CgkJCX0gZWxzZSBpZiAoICggb2JqIGluc3RhbmNl
b2YgU3RyaW5nICkgfHwgKCBvYmogaW5zdGFuY2VvZiBJbnRlZ2VyICkgfHwgKCBvYmogaW5zdGFu
Y2VvZiBMb25nICkgfHwgKCBvYmogaW5zdGFuY2VvZiBGbG9hdCApIHx8ICggb2JqIGluc3RhbmNl
b2YgRG91YmxlICkgKSB7CS8vIDEuIG9iaiBpcyBTdHJpbmcgb3IgTnVtYmVyCgkJCQlpZiAoIG9i
aiBpbnN0YW5jZW9mIFN0cmluZyApIHsKCQkJCQlrZXlWYWx1ZSA9ICggU3RyaW5nIClvYmo7CgkJ
CQl9IGVsc2UgaWYgKCBvYmogaW5zdGFuY2VvZiBJbnRlZ2VyICkgewoJCQkJCWtleVZhbHVlID0g
KCBpbnQgKW9iaiArICIiOwoJCQkJfSBlbHNlIGlmICggb2JqIGluc3RhbmNlb2YgTG9uZyApIHsK
CQkJCQlrZXlWYWx1ZSA9ICggbG9uZyApb2JqICsgIiI7CgkJCQl9IGVsc2UgaWYgKCBvYmogaW5z
dGFuY2VvZiBGbG9hdCApIHsKCQkJCQlrZXlWYWx1ZSA9ICggZmxvYXQgKW9iaiArICIiOwoJCQkJ
fSBlbHNlIGlmICggb2JqIGluc3RhbmNlb2YgRG91YmxlICkgewoJCQkJCWtleVZhbHVlID0gKCBk
b3VibGUgKW9iaiArICIiOwoJCQkJfQoJCQkJLy9kZWJ1Z0xvZ2dlci5wcmludExvZ0F0SVMoICJM
b2cgMSA6ICIgKyBzY2hlbWFMaXN0WyBzY2hlbWFJbmRleCBdICk7CgkJCQl0b2tlbiA9IHNjaGVt
YUxpc3RbIHNjaGVtYUluZGV4IF0uc3BsaXQoICIvIiApOwoJCQkJc2NoZW1hU2luZ2xlQXJyYXkg
PSB0b2tlblsgMCBdOwoJCQkJZmllbGROYW1lID0gdG9rZW5bIDEgXTsKCQkJCWZpZWxkTGVuZ3Ro
ID0gdG9rZW5bIDIgXTsKCQkJCXBhZGRpbmdDaGFyID0gdG9rZW5bIDMgXTsKCQkJCXBhZGRpbmdU
eXBlID0gdG9rZW5bIDQgXTsKCQkJCWxlbmd0aFN0YXJ0SW5mbyA9IHRva2VuWyA3IF07CgkJCQlm
aWVsZFR5cGUgPSB0b2tlblsgOCBdOwoJCQkJb3RUb2tlbiA9IGZpZWxkVHlwZS5zcGxpdCggIlxc
JCIgKTsKCQkJCXJlYWxGaWVsZFR5cGUgPSBvdFRva2VuWyAwIF0udHJpbSgpLnRvVXBwZXJDYXNl
KCk7CgkJCQkvL2RlYnVnTG9nZ2VyLnByaW50TG9nQXRJUyggIkxvZyAyICIgKTsKCQkJCS8qIAoJ
CQkJICogcmVhbEZpZWxkVHlwZQoJCQkJICogU1QgOiBGaWVsZOqwgCBTb3VyY2UsIFRhcmdldOyX
kCDrqqjrkZAg7KG07J6s7ZWY64qUIOqyveyasCA9PT4gU291cmNl7JeQ7IScIFZhbHVlIOy2lOy2
nCwgVGFyZ2V0IEZpZWxkIOychOy5mOyXkCBWYWx1ZeulvCBBcHBlbmQKCQkJCSAqIE9TIDogRmll
bGTqsIAgU291cmNl7JeQ66eMIOyhtOyerO2VmOqzoCBUYXJnZXTsl5DripQgIOyhtOyerO2VmOyn
gCDslYrripQg6rK97JqwID09PiBTb3VyY2Xsl5DshJwgVmFsdWUg7LaU7LacLCBUYXJnZXQgRmll
bGQg7JyE7LmY7JeQIFZhbHVlIEFwcGVuZCDsg53rnrUKCQkJCSAqIE9UIDogRmllbGTqsIAgVGFy
Z2V07JeQ66eMIOyhtOyerO2VmOqzoCBTb3VyY2Xsl5DripQgIOyhtOyerO2VmOyngCDslYrripQg
6rK97JqwID09PiDtmITsnqwg7Luk7IScIOyVnuuLqOyXkOyEnCBPVOyXkCDrjIDtlZwg7LKY66as
66W8IO2WiOyWtOyVvCDtlZjripTrjbAg66q77ZWcIOqyveyasOydtOuvgOuhnCBPVOyXkCDrjIDt
lZwg7LKY66as66W8IOuovOyggCDsiJjtlontlZzri6QuCgkJCQkgKiAgICAgIChUYXJnZXQgRmll
bGQg7JyE7LmY7JeQIFZhbHVl66W8IEFwcGVuZCkKCQkJCSAqICAgICAgT1QgRmllbGTqsIAg7Jew
7IaN7Jy866GcIOyXrOufrCDqsJzqsIAg7J6I7J2EIOyImCDsnojquLAg65WM66y47JeQIHdoaWxl
IOusuOydhCDsnbTsmqntlbTshJwg7LKY66as7ZWY6rOgIGN1cktleSA9PSBmaWVsZE5hbWUg7J20
66m0IHdoaWxlIOusuOydhCBicmVhayDtlZzri6QuCgkJCQkgKiAgICAgIGJyZWFrIO2VmOq4sCDs
oIQg64uo6rOE7JeQ7IScIHNjaGVtYUluZGV466W8ICsxIO2VtOyEnCDtmITsnqwg7Luk7ISc7JeQ
IOuMgO2VnCBzY2hlbWEg7KCV67O066W8IOq1rO2VtOyVvCDtlZzri6QuCgkJCQkgKiAgICAgIAoJ
CQkJICogbGVuZ3RoU3RhcnRJbmZvID09PiBZJERvYyBMZW5ndGggSW5kZXgkRmllbGQgTGVuZ3Ro
IO2Yle2DnC4gZXgpIFkkMyQ0CgkJCQkgKi8KCQkJCQoJCQkJLy8g7KCE66y4IOq4uOydtCDqs4Ts
grAg67CPIOyghOusuCDquLjsnbQg7IWL7YyF7J2EIOychO2VnCDsoJXrs7Qg7LaU7LacID09PiBD
b252ZXJ0aW5nIO2VmOuKlCDspJHsl5Ag7ZWc67KI66eMIOyLpO2WieuQnOuLpC4KCQkJCWlmICgg
IWxlbmd0aFN0YXJ0SW5mby5lcXVhbHMoICIiICkgKSB7CgkJCQkJaWYgKCBsZW5ndGhTdGFydElu
Zm8uc3RhcnRzV2l0aCggIlkiICkgKSB7CgkJCQkJCS8vZGVidWdMb2dnZXIucHJpbnRMb2dBdElT
KCAiTG9nIDMgOiAiICsgbGVuZ3RoU3RhcnRJbmZvICk7CgkJCQkJCWFkZERvY0xlbiA9ICJZIjsK
CQkJCQkJbGVuZ3RoVG9rZW4gPSBsZW5ndGhTdGFydEluZm8uc3BsaXQoICJcXCQiICk7CgkJCQkJ
CWxlbmd0aFN0YXJ0SW5kZXggPSBJbnRlZ2VyLnBhcnNlSW50KCBsZW5ndGhUb2tlblsgMSBdLnRy
aW0oKSApOwoJCQkJCQlsZW5ndGhGaWVsZExlbiA9IEludGVnZXIucGFyc2VJbnQoIGxlbmd0aFRv
a2VuWyAyIF0udHJpbSgpICk7CgkJCQkJCS8vbGVuZ3RoTG9jVHlwZSA9IGxlbmd0aFRva2VuWyAy
IF0udHJpbSgpOwoJCQkJCQkvL2N1ckxlbmd0aExvY1R5cGUgPSBsZW5ndGhUb2tlblsgMiBdLnRy
aW0oKTsKCQkJCQkJLy9kZWJ1Z0xvZ2dlci5wcmludExvZ0F0SVMoICJMb2cgNCAiICk7CgkJCQkJ
CS8qCgkJCQkJCWlmICggY3VyTGVuZ3RoTG9jVHlwZS5lcXVhbHMoICJJIiApICkgewoJCQkJCQkJ
cmVhbEZpZWxkVHlwZSA9ICJPVCI7CgkJCQkJCX0gZWxzZSBpZiAoIGN1ckxlbmd0aExvY1R5cGUu
ZXF1YWxzKCAiUiIgKSApIHsKCQkJCQkJCXJlYWxGaWVsZFR5cGUgPSAiU1QiOwoJCQkJCQl9CgkJ
CQkJCSovCgkJCQkJfSBlbHNlIHsKCQkJCQkJLy8gY3VyTGVuZ3RoTG9jVHlwZeydmCDqsJLsnYAg
7ZW064u5IEZpZWxk7JeQ7IScIO2VnOuyiOunjCDsgqzsmqnrkJjqs6Ag64KY66i47KeAIEZpZWxk
7JeQ7ISc64qUIOyCrOyaqeuQmOuptCDslYjrkJjquLAg65WM66y47JeQIOy0iOq4sO2ZlOulvCDt
lbTslbwg7ZWc64ukLgoJCQkJCQkvL2N1ckxlbmd0aExvY1R5cGUgPSAiIjsKCQkJCQl9CgkJCQl9
IGVsc2UgewoJCQkJCS8vIGN1ckxlbmd0aExvY1R5cGXsnZgg6rCS7J2AIO2VtOuLuSBGaWVsZOyX
kOyEnCDtlZzrsojrp4wg7IKs7Jqp65CY6rOgIOuCmOuouOyngCBGaWVsZOyXkOyEnOuKlCDsgqzs
mqnrkJjrqbQg7JWI65CY6riwIOuVjOusuOyXkCDstIjquLDtmZTrpbwg7ZW07JW8IO2VnOuLpC4K
CQkJCQkvL2N1ckxlbmd0aExvY1R5cGUgPSAiIjsKCQkJCX0KCQkJCQoJCQkJLy8gU2NoZW1hIOyg
leydmOyXkOuKlCBBcnJheeyXkCDrjIDtlZwg7KCV7J2Y6rCAIOyhtOyerO2VmOyngOunjCBpRGF0
YeyXkOuKlCBBcnJheSBSZWNvcmQgQ291bnTqsIAgMCDsnbTslrTshJwgQXJyYXnqsIAg7KG07J6s
7ZWY7KeAIOyViuuKlCDqsr3smrDsl5Ag64yA7ZW07IScIOqzoOugpO2VtOyVvCDtlZzri6QuCQkJ
CQkKCQkJCWlmICggc2luZ2xlQXJyYXkuZXF1YWxzKCAiUyIgKSAmJiBzY2hlbWFTaW5nbGVBcnJh
eS5lcXVhbHMoICJBIiApICkgewoJCQkJCS8vIFNpbmdsZSBSZWNvcmTsnZgg7ZWE65Oc7JeQIOuM
gO2VtOyEnCDsspjrpqztlZjqs6Ag7J6I64qU642wIFNjaGVtYSDsoJXsnZjripQgQXJyYXnsl5Ag
64yA7ZWcIOqwkuydtOuptCBBcnJheSBSZWNvcmQgQ291bnTqsIAgMCDsnbTslrTshJwgQXJyYXnq
sIAg7KG07J6s7ZWY7KeAIOyViuqzoAkJCQkJCgkJCQkJLy8g64uk7J2MIFNpbmdsZSBSZWNvcmTs
nZgg7ZWE65Oc6rCAIOyhtOyerO2VmOuKlCDqsr3smrDsnbTri6QuCgkJCQkJCgkJCQkJd2hpbGUo
IHRydWUgKSB7CgkJCQkJCXNjaGVtYUluZGV4Kys7CgkJCQkJCXRva2VuID0gc2NoZW1hTGlzdFsg
c2NoZW1hSW5kZXggXS5zcGxpdCggIi8iICk7CgkJCQkJCXNjaGVtYVNpbmdsZUFycmF5ID0gdG9r
ZW5bIDAgXTsKCQkJCQkJZmllbGROYW1lID0gdG9rZW5bIDEgXTsKCQkJCQkJZmllbGRMZW5ndGgg
PSB0b2tlblsgMiBdOwoJCQkJCQlwYWRkaW5nQ2hhciA9IHRva2VuWyAzIF07CgkJCQkJCXBhZGRp
bmdUeXBlID0gdG9rZW5bIDQgXTsKCQkJCQkJbGVuZ3RoU3RhcnRJbmZvID0gdG9rZW5bIDcgXTsK
CQkJCQkJZmllbGRUeXBlID0gdG9rZW5bIDggXTsKCQkJCQkJb3RUb2tlbiA9IGZpZWxkVHlwZS5z
cGxpdCggIlxcJCIgKTsKCQkJCQkJcmVhbEZpZWxkVHlwZSA9IG90VG9rZW5bIDAgXS50cmltKCku
dG9VcHBlckNhc2UoKTsKCQkJCQkJCgkJCQkJCS8vIOyghOusuCDquLjsnbQg6rOE7IKwIOuwjyDs
oITrrLgg6ri47J20IOyFi+2MheydhCDsnITtlZwg7KCV67O0IOy2lOy2nCA9PT4gQ29udmVydGlu
ZyDtlZjripQg7KSR7JeQIO2VnOuyiOunjCDsi6TtlonrkJzri6QuCgkJCQkJCWlmICggIWxlbmd0
aFN0YXJ0SW5mby5lcXVhbHMoICIiICkgKSB7CgkJCQkJCQlpZiAoIGxlbmd0aFN0YXJ0SW5mby5z
dGFydHNXaXRoKCAiWSIgKSApIHsKCQkJCQkJCQlhZGREb2NMZW4gPSAiWSI7CgkJCQkJCQkJbGVu
Z3RoVG9rZW4gPSBsZW5ndGhTdGFydEluZm8uc3BsaXQoICJcXCQiICk7CgkJCQkJCQkJbGVuZ3Ro
U3RhcnRJbmRleCA9IEludGVnZXIucGFyc2VJbnQoIGxlbmd0aFRva2VuWyAxIF0udHJpbSgpICk7
CgkJCQkJCQkJbGVuZ3RoRmllbGRMZW4gPSBJbnRlZ2VyLnBhcnNlSW50KCBsZW5ndGhUb2tlblsg
MiBdLnRyaW0oKSApOwoJCQkJCQkJCS8vbGVuZ3RoTG9jVHlwZSA9IGxlbmd0aFRva2VuWyAyIF0u
dHJpbSgpOwoJCQkJCQkJCS8vY3VyTGVuZ3RoTG9jVHlwZSA9IGxlbmd0aFRva2VuWyAyIF0udHJp
bSgpOwoJCQkJCQkJCS8qCgkJCQkJCQkJaWYgKCBjdXJMZW5ndGhMb2NUeXBlLmVxdWFscyggIkki
ICkgKSB7CgkJCQkJCQkJCXJlYWxGaWVsZFR5cGUgPSAiT1QiOwoJCQkJCQkJCX0gZWxzZSBpZiAo
IGN1ckxlbmd0aExvY1R5cGUuZXF1YWxzKCAiUiIgKSApIHsKCQkJCQkJCQkJcmVhbEZpZWxkVHlw
ZSA9ICJTVCI7CgkJCQkJCQkJfQoJCQkJCQkJCSovCgkJCQkJCQl9IGVsc2UgewoJCQkJCQkJCS8v
IGN1ckxlbmd0aExvY1R5cGXsnZgg6rCS7J2AIO2VtOuLuSBGaWVsZOyXkOyEnCDtlZzrsojrp4wg
7IKs7Jqp65CY6rOgIOuCmOuouOyngCBGaWVsZOyXkOyEnOuKlCDsgqzsmqnrkJjrqbQg7JWI65CY
6riwIOuVjOusuOyXkCDstIjquLDtmZTrpbwg7ZW07JW8IO2VnOuLpC4KCQkJCQkJCQkvL2N1ckxl
bmd0aExvY1R5cGUgPSAiIjsKCQkJCQkJCX0KCQkJCQkJfSBlbHNlIHsKCQkJCQkJCS8vIGN1ckxl
bmd0aExvY1R5cGXsnZgg6rCS7J2AIO2VtOuLuSBGaWVsZOyXkOyEnCDtlZzrsojrp4wg7IKs7Jqp
65CY6rOgIOuCmOuouOyngCBGaWVsZOyXkOyEnOuKlCDsgqzsmqnrkJjrqbQg7JWI65CY6riwIOuV
jOusuOyXkCDstIjquLDtmZTrpbwg7ZW07JW8IO2VnOuLpC4KCQkJCQkJCS8vY3VyTGVuZ3RoTG9j
VHlwZSA9ICIiOwoJCQkJCQl9CgkJCQkJCQoJCQkJCQlpZiAoIHNjaGVtYVNpbmdsZUFycmF5LmVx
dWFscyggIlMiICkgJiYgY3VyS2V5LmVxdWFscyggZmllbGROYW1lICkgKSB7CgkJCQkJCQlicmVh
azsKCQkJCQkJfQoJCQkJCX0KCQkJCX0gZWxzZSBpZiAoIHNpbmdsZUFycmF5LmVxdWFscyggIkEi
ICkgJiYgIWN1cktleS5lcXVhbHMoIGZpZWxkTmFtZSApICkgewoJCQkJCS8vIEFycmF5IFJlY29y
ZOydmCDtlYTrk5zsl5Ag64yA7ZW07IScIOyymOumrO2VmOqzoCDsnojripTrjbAgIFNjaGVtYSDs
oJXsnZjripQgQXJyYXkg7ZWY7JyE7JeQIOuYkCDri6TrpbggQXJyYXnqsIAg7KG07J6s7ZWY64qU
IOq1rOyhsOyduOuNsCDtlZjsnIQgQXJyYXkgUmVjb3JkIENvdW506rCAIDAg7J207Ja07IScIO2V
mOychCBBcnJheeqwgCDsobTsnqztlZjsp4Ag7JWK6rOgCQkJCQkKCQkJCQkvLyDri6TsnYwgQXJy
YXkgUmVjb3Jk7J2YIO2VhOuTnOqwgCDsobTsnqztlZjripQg6rK97Jqw7J2064ukLgoJCQkJCXdo
aWxlKCB0cnVlICkgewoJCQkJCQlzY2hlbWFJbmRleCsrOwoJCQkJCQl0b2tlbiA9IHNjaGVtYUxp
c3RbIHNjaGVtYUluZGV4IF0uc3BsaXQoICIvIiApOwoJCQkJCQlzY2hlbWFTaW5nbGVBcnJheSA9
IHRva2VuWyAwIF07CgkJCQkJCWZpZWxkTmFtZSA9IHRva2VuWyAxIF07CgkJCQkJCWZpZWxkTGVu
Z3RoID0gdG9rZW5bIDIgXTsKCQkJCQkJcGFkZGluZ0NoYXIgPSB0b2tlblsgMyBdOwoJCQkJCQlw
YWRkaW5nVHlwZSA9IHRva2VuWyA0IF07CgkJCQkJCWxlbmd0aFN0YXJ0SW5mbyA9IHRva2VuWyA3
IF07CgkJCQkJCWZpZWxkVHlwZSA9IHRva2VuWyA4IF07CgkJCQkJCW90VG9rZW4gPSBmaWVsZFR5
cGUuc3BsaXQoICJcXCQiICk7CgkJCQkJCXJlYWxGaWVsZFR5cGUgPSBvdFRva2VuWyAwIF0udHJp
bSgpLnRvVXBwZXJDYXNlKCk7CgkJCQkJCQoJCQkJCQkvLyDsoITrrLgg6ri47J20IOqzhOyCsCDr
sI8g7KCE66y4IOq4uOydtCDshYvtjIXsnYQg7JyE7ZWcIOygleuztCDstpTstpwgPT0+IENvbnZl
cnRpbmcg7ZWY64qUIOykkeyXkCDtlZzrsojrp4wg7Iuk7ZaJ65Cc64ukLgoJCQkJCQlpZiAoICFs
ZW5ndGhTdGFydEluZm8uZXF1YWxzKCAiIiApICkgewoJCQkJCQkJaWYgKCBsZW5ndGhTdGFydElu
Zm8uc3RhcnRzV2l0aCggIlkiICkgKSB7CgkJCQkJCQkJYWRkRG9jTGVuID0gIlkiOwoJCQkJCQkJ
CWxlbmd0aFRva2VuID0gbGVuZ3RoU3RhcnRJbmZvLnNwbGl0KCAiXFwkIiApOwoJCQkJCQkJCWxl
bmd0aFN0YXJ0SW5kZXggPSBJbnRlZ2VyLnBhcnNlSW50KCBsZW5ndGhUb2tlblsgMSBdLnRyaW0o
KSApOwoJCQkJCQkJCWxlbmd0aEZpZWxkTGVuID0gSW50ZWdlci5wYXJzZUludCggbGVuZ3RoVG9r
ZW5bIDIgXS50cmltKCkgKTsKCQkJCQkJCQkvL2xlbmd0aExvY1R5cGUgPSBsZW5ndGhUb2tlblsg
MiBdLnRyaW0oKTsKCQkJCQkJCQkvL2N1ckxlbmd0aExvY1R5cGUgPSBsZW5ndGhUb2tlblsgMiBd
LnRyaW0oKTsKCQkJCQkJCQkvKgoJCQkJCQkJCWlmICggY3VyTGVuZ3RoTG9jVHlwZS5lcXVhbHMo
ICJJIiApICkgewoJCQkJCQkJCQlyZWFsRmllbGRUeXBlID0gIk9UIjsKCQkJCQkJCQl9IGVsc2Ug
aWYgKCBjdXJMZW5ndGhMb2NUeXBlLmVxdWFscyggIlIiICkgKSB7CgkJCQkJCQkJCXJlYWxGaWVs
ZFR5cGUgPSAiU1QiOwoJCQkJCQkJCX0KCQkJCQkJCQkqLwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJ
CQkvLyBjdXJMZW5ndGhMb2NUeXBl7J2YIOqwkuydgCDtlbTri7kgRmllbGTsl5DshJwg7ZWc67KI
66eMIOyCrOyaqeuQmOqzoCDrgpjrqLjsp4AgRmllbGTsl5DshJzripQg7IKs7Jqp65CY66m0IOyV
iOuQmOq4sCDrlYzrrLjsl5Ag7LSI6riw7ZmU66W8IO2VtOyVvCDtlZzri6QuCgkJCQkJCQkJLy9j
dXJMZW5ndGhMb2NUeXBlID0gIiI7CgkJCQkJCQl9CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkvLyBj
dXJMZW5ndGhMb2NUeXBl7J2YIOqwkuydgCDtlbTri7kgRmllbGTsl5DshJwg7ZWc67KI66eMIOyC
rOyaqeuQmOqzoCDrgpjrqLjsp4AgRmllbGTsl5DshJzripQg7IKs7Jqp65CY66m0IOyViOuQmOq4
sCDrlYzrrLjsl5Ag7LSI6riw7ZmU66W8IO2VtOyVvCDtlZzri6QuCgkJCQkJCQkvL2N1ckxlbmd0
aExvY1R5cGUgPSAiIjsKCQkJCQkJfQoJCQkJCQkKCQkJCQkJaWYgKCBzY2hlbWFTaW5nbGVBcnJh
eS5lcXVhbHMoICJBIiApICYmIGN1cktleS5lcXVhbHMoIGZpZWxkTmFtZSApICkgewoJCQkJCQkJ
YnJlYWs7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCQkKCQkJCS8vIHJlYWxGaWVsZFR5cGUgPT0g
T1Qg7J24IOqyveyasOyXkCDtmITsnqwg7Luk7IScIOyVnuuLqOyXkOyEnCBPVOyXkCDrjIDtlZwg
7LKY66as66W8IO2WiOyWtOyVvCDtlZjripTrjbAg66q77ZWcIOqyveyasOydtOuvgOuhnCBPVOyX
kCDrjIDtlZwg7LKY66as66W8IOuovOyggCDsiJjtlontlZzri6QuCgkJCQkvLyBPVCBGaWVsZOqw
gCDsl7Dsho3snLzroZwg7Jes65+sIOqwnOqwgCDsnojsnYQg7IiYIOyeiOq4sCDrlYzrrLjsl5Ag
d2hpbGUg66y47J2EIOydtOyaqe2VnOuLpC4g7ZiE7J6sIOy7pOyEnOyXkCDrjIDtlZwgc2NoZW1h
IOygleuztOulvCDqtaztlZjrqbQgd2hpbGUg66y4IGJyZWFrIO2VnOuLpC4KCQkJCWlmICggcmVh
bEZpZWxkVHlwZS5lcXVhbHMoICJPVCIgKSApIHsKCQkJCQl3aGlsZSAoIHRydWUgKSB7CgkJCQkJ
CS8vZGVidWdMb2dnZXIucHJpbnRMb2dBdElTKCAiTG9nIDUgOiAiICsgb3RJbmRleCApOwoJCQkJ
CQlpZiAoIG90SW5kZXggPT0gMCApIHsKCQkJCQkJCS8vIOychOyXkOyEnCBzY2hlbWEg7KCV67O0
66W8IOq1rO2WiOycvOuvgOuhnCBzY2hlbWEg7KCV67O0IOq1rO2VmOuKlCDqsoMg7IOd6561CgkJ
CQkJCQlvdEluZGV4Kys7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkvLyDri6TsnYwgc2NoZW1hIOyg
leuztCDqtaztlZjquLAKCQkJCQkJCXNjaGVtYUluZGV4Kys7CgkJCQkJCQl0b2tlbiA9IHNjaGVt
YUxpc3RbIHNjaGVtYUluZGV4IF0uc3BsaXQoICIvIiApOwoJCQkJCQkJc2NoZW1hU2luZ2xlQXJy
YXkgPSB0b2tlblsgMCBdOwoJCQkJCQkJZmllbGROYW1lID0gdG9rZW5bIDEgXTsKCQkJCQkJCWZp
ZWxkTGVuZ3RoID0gdG9rZW5bIDIgXTsKCQkJCQkJCXBhZGRpbmdDaGFyID0gdG9rZW5bIDMgXTsK
CQkJCQkJCXBhZGRpbmdUeXBlID0gdG9rZW5bIDQgXTsKCQkJCQkJCWxlbmd0aFN0YXJ0SW5mbyA9
IHRva2VuWyA3IF07CgkJCQkJCQlmaWVsZFR5cGUgPSB0b2tlblsgOCBdOwoJCQkJCQkJb3RUb2tl
biA9IGZpZWxkVHlwZS5zcGxpdCggIlxcJCIgKTsKCQkJCQkJCXJlYWxGaWVsZFR5cGUgPSBvdFRv
a2VuWyAwIF0udHJpbSgpLnRvVXBwZXJDYXNlKCk7CgkJCQkJCQkKCQkJCQkJCS8vIOyghOusuCDq
uLjsnbQg6rOE7IKwIOuwjyDsoITrrLgg6ri47J20IOyFi+2MheydhCDsnITtlZwg7KCV67O0IOy2
lOy2nCA9PT4gQ29udmVydGluZyDtlZjripQg7KSR7JeQIO2VnOuyiOunjCDsi6TtlonrkJzri6Qu
CgkJCQkJCQlpZiAoICFsZW5ndGhTdGFydEluZm8uZXF1YWxzKCAiIiApICkgewoJCQkJCQkJCWlm
ICggbGVuZ3RoU3RhcnRJbmZvLnN0YXJ0c1dpdGgoICJZIiApICkgewoJCQkJCQkJCQlhZGREb2NM
ZW4gPSAiWSI7CgkJCQkJCQkJCWxlbmd0aFRva2VuID0gbGVuZ3RoU3RhcnRJbmZvLnNwbGl0KCAi
XFwkIiApOwoJCQkJCQkJCQlsZW5ndGhTdGFydEluZGV4ID0gSW50ZWdlci5wYXJzZUludCggbGVu
Z3RoVG9rZW5bIDEgXS50cmltKCkgKTsKCQkJCQkJCQkJbGVuZ3RoRmllbGRMZW4gPSBJbnRlZ2Vy
LnBhcnNlSW50KCBsZW5ndGhUb2tlblsgMiBdLnRyaW0oKSApOwoJCQkJCQkJCQkvL2xlbmd0aExv
Y1R5cGUgPSBsZW5ndGhUb2tlblsgMiBdLnRyaW0oKTsKCQkJCQkJCQkJLy9jdXJMZW5ndGhMb2NU
eXBlID0gbGVuZ3RoVG9rZW5bIDIgXS50cmltKCk7CgkJCQkJCQkJCS8qCgkJCQkJCQkJCWlmICgg
Y3VyTGVuZ3RoTG9jVHlwZS5lcXVhbHMoICJJIiApICkgewoJCQkJCQkJCQkJcmVhbEZpZWxkVHlw
ZSA9ICJPVCI7CgkJCQkJCQkJCX0gZWxzZSBpZiAoIGN1ckxlbmd0aExvY1R5cGUuZXF1YWxzKCAi
UiIgKSApIHsKCQkJCQkJCQkJCXJlYWxGaWVsZFR5cGUgPSAiU1QiOwoJCQkJCQkJCQl9CgkJCQkJ
CQkJCSovCgkJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkJLy8gY3VyTGVuZ3RoTG9jVHlwZeydmCDq
sJLsnYAg7ZW064u5IEZpZWxk7JeQ7IScIO2VnOuyiOunjCDsgqzsmqnrkJjqs6Ag64KY66i47KeA
IEZpZWxk7JeQ7ISc64qUIOyCrOyaqeuQmOuptCDslYjrkJjquLAg65WM66y47JeQIOy0iOq4sO2Z
lOulvCDtlbTslbwg7ZWc64ukLgoJCQkJCQkJCQkvL2N1ckxlbmd0aExvY1R5cGUgPSAiIjsKCQkJ
CQkJCQl9CgkJCQkJCQl9IGVsc2UgewoJCQkJCQkJCS8vIGN1ckxlbmd0aExvY1R5cGXsnZgg6rCS
7J2AIO2VtOuLuSBGaWVsZOyXkOyEnCDtlZzrsojrp4wg7IKs7Jqp65CY6rOgIOuCmOuouOyngCBG
aWVsZOyXkOyEnOuKlCDsgqzsmqnrkJjrqbQg7JWI65CY6riwIOuVjOusuOyXkCDstIjquLDtmZTr
pbwg7ZW07JW8IO2VnOuLpC4KCQkJCQkJCQkvL2N1ckxlbmd0aExvY1R5cGUgPSAiIjsKCQkJCQkJ
CX0KCQkJCQkJCQoJCQkJCQkJaWYgKCAoIHJlYWxGaWVsZFR5cGUuZXF1YWxzKCAiU1QiICkgfHwg
cmVhbEZpZWxkVHlwZS5lcXVhbHMoICJPUyIgKSApICYmIGN1cktleS5lcXVhbHMoIGZpZWxkTmFt
ZSApICkgewoJCQkJCQkJCS8vIO2YhOyerCDsu6TshJzsl5Ag64yA7ZWcIHNjaGVtYSDsoJXrs7Tr
pbwg6rWs7ZWcIOqyveyasAoJCQkJCQkJCWJyZWFrOwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkv
LyDsl7Dsho3soIHsnLzroZwgT1TqsIAg7J6I64qUIOqyveyasAoJCQkJCQkJfQoJCQkJCQl9CgkJ
CQkJCS8vZGVidWdMb2dnZXIucHJpbnRMb2dBdElTKCAiTG9nIDYgOiAiICsgY3VyTGVuZ3RoTG9j
VHlwZSApOwoJCQkJCQkvLyBUYXJnZXQgRmllbGTsl5Ag64yA7ZWcIFZhbHVlIOq1rO2VmOq4sAoJ
CQkJCQl2YWx1ZVR5cGUgPSBvdFRva2VuWyAxIF0udHJpbSgpLnRvVXBwZXJDYXNlKCk7CgkJCQkJ
CQkKCQkJCQkJaWYgKCB2YWx1ZVR5cGUuZXF1YWxzKCAiRlYiICkgKSB7CgkJCQkJCQlvdFZhbHVl
ID0gb3RUb2tlblsgMiBdOwoJCQkJCQl9IGVsc2UgaWYgKCB2YWx1ZVR5cGUuZXF1YWxzKCAiVlYi
ICkgKSB7CgkJCQkJCQlzdmNJbmZvID0gb3RUb2tlblsgMiBdLnRyaW0oKS5zcGxpdCggIjoiICk7
CgkJCQkJCQlJRGF0YVV0aWwucHV0KCBpbnB1dEN1cnNvciwgInBpcGVsaW5lRGF0YSIsIHBpcGVs
aW5lRGF0YSApOwoJCQkJCQkJb3V0SURhdGEgPSBTZXJ2aWNlLmRvSW52b2tlKCBzdmNJbmZvWyAw
IF0sIHN2Y0luZm9bIDEgXSwgaW5JRGF0YSApOwoJCQkJCQkJb3V0cHV0Q3Vyc29yID0gb3V0SURh
dGEuZ2V0Q3Vyc29yKCk7CgkJCQkJCQlvdFZhbHVlID0gSURhdGFVdGlsLmdldFN0cmluZyggb3V0
cHV0Q3Vyc29yLCAib3V0VmFsdWUiICk7CgkJCQkJCX0KCQkJCQkJCgkJCQkJCS8vIFRhcmdldCBG
aWVsZCDsnITsuZjsl5AgVmFsdWXrpbwgQXBwZW5kCgkJCQkJCWlmICggb3RWYWx1ZS5lcXVhbHMo
ICIiICkgKSB7CgkJCQkJCQkvLyBUYXJnZXQgRmllbGQg7JyE7LmY7JeQIFZhbHVlIEFwcGVuZCDs
g53rnrUKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCXRyeSB7CgkJCQkJCQkJLy8gZmllbGRMZW5ndGjs
l5Ag7Iuk7KCc66GcIEZpZWxk7J2YIOq4uOydtCDsoJXrs7TqsIAg7J6I64qUIOqyveyasCA9PT4g
RmllbGTqsIAg6rOg7KCV6ri47J207J24IOqyveyasAoJCQkJCQkJCWZpZWxkTGVuID0gSW50ZWdl
ci5wYXJzZUludCggZmllbGRMZW5ndGggKTsKCQkJCQkJCX0gY2F0Y2ggKCBFeGNlcHRpb24gaWUg
KSB7CgkJCQkJCQkJLy8gZmllbGRMZW5ndGjsl5AgRmllbGTsnZgg6ri47J20IOygleuztOulvCDt
j6ztlajtlZjripQgRmllbGTrqoUg7KCV67O06rCAIOyeiOuKlCDqsr3smrAgPT0+IEZpZWxk6rCA
IOqwgOuzgOq4uOydtOyduCDqsr3smrAKCQkJCQkJCQlmaWVsZExlbmd0aCA9IElEYXRhVXRpbC5n
ZXRTdHJpbmcoIGN1ciwgZmllbGRMZW5ndGggKS50cmltKCk7CgkJCQkJCQkJZmllbGRMZW4gPSBJ
bnRlZ2VyLnBhcnNlSW50KCBmaWVsZExlbmd0aCApOwoJCQkJCQkJCQoJCQkJCQkJCS8vIElEYXRh
VXRpbC5nZXRTdHJpbmcg7Iuk7ZaJIOyLnCBDdXJzb3Ig7JyE7LmY6rCAIOydtOuPme2VmOuvgOuh
nCBDdXJzb3Lrpbwg7JuQ656YIOychOy5mOuhnCDri6Tsi5wg7J2064+Z7ZWc64ukLgoJCQkJCQkJ
CUlEYXRhVXRpbC5nZXRTdHJpbmcoIGN1ciwgY3VyS2V5ICk7CgkJCQkJCQl9CgkJCQkJCQkKCQkJ
CQkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAiY29udGVudCIsIG90VmFsdWUgKTsKCQkJ
CQkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAiY2hhcnNldCIsIGNoYXJzZXQgKTsKCQkJ
CQkJCQoJCQkJCQkJb3V0SURhdGEgPSBTZXJ2aWNlLmRvSW52b2tlKCAiSlNvY2tldEFkYXB0ZXIu
Q09NTU9OLlVUSUwuU1RSSU5HIiwgImdldEJ5dGVMZW5ndGgiLCBpbklEYXRhICk7CgkJCQkJCQlv
dXRwdXRDdXJzb3IgPSBvdXRJRGF0YS5nZXRDdXJzb3IoKTsKCQkJCQkJCWJ5dGVMZW5ndGggPSBJ
RGF0YVV0aWwuZ2V0U3RyaW5nKCBvdXRwdXRDdXJzb3IsICJieXRlTGVuZ3RoIiApOwoJCQkJCQkJ
Ynl0ZUxlbiA9IEludGVnZXIucGFyc2VJbnQoIGJ5dGVMZW5ndGggKTsKCQkJCQkJCQoJCQkJCQkJ
aWYgKCBmaWVsZExlbiA9PSBieXRlTGVuICkgewoJCQkJCQkJCXN0ckJ1ZmZlci5hcHBlbmQoIG90
VmFsdWUgKTsKCQkJCQkJCX0gZWxzZSBpZiAoIGZpZWxkTGVuIDwgYnl0ZUxlbiApIHsKCQkJCQkJ
CQlJRGF0YVV0aWwucHV0KCBpbnB1dEN1cnNvciwgImluU3RyaW5nIiwgb3RWYWx1ZSApOwoJCQkJ
CQkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAic3RhcnRPZmZzZXQiLCAiMCIgKTsKCQkJ
CQkJCQlJRGF0YVV0aWwucHV0KCBpbnB1dEN1cnNvciwgImxlbmd0aCIsIGZpZWxkTGVuZ3RoICk7
CgkJCQkJCQkJSURhdGFVdGlsLnB1dCggaW5wdXRDdXJzb3IsICJjaGFyc2V0IiwgY2hhcnNldCAp
OwoJCQkJCQkJCQoJCQkJCQkJCW91dElEYXRhID0gU2VydmljZS5kb0ludm9rZSggIkpTb2NrZXRB
ZGFwdGVyLkNPTU1PTi5VVElMLlNUUklORyIsICJzdWJzdHJpbmdCeUJ5dGVzIiwgaW5JRGF0YSAp
OwoJCQkJCQkJCW91dHB1dEN1cnNvciA9IG91dElEYXRhLmdldEN1cnNvcigpOwoJCQkJCQkJCW90
VmFsdWUgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKCBvdXRwdXRDdXJzb3IsICJvdXRTdHJpbmciICk7
CgkJCQkJCQkJc3RyQnVmZmVyLmFwcGVuZCggb3RWYWx1ZSApOwoJCQkJCQkJfSBlbHNlIGlmICgg
ZmllbGRMZW4gPiBieXRlTGVuICkgewoJCQkJCQkJCXBhZGRpbmdMZW5ndGggPSBmaWVsZExlbiAt
IGJ5dGVMZW47CgkJCQkJCQkJCgkJCQkJCQkJZm9yICggaW50IGkgPSAwOyBpIDwgcGFkZGluZ0xl
bmd0aDsgaSsrICkgewoJCQkJCQkJCQlwYWRkaW5nU3RyaW5nICs9IHBhZGRpbmdDaGFyOwoJCQkJ
CQkJCX0KCQkJCQkJCQkKCQkJCQkJCQlpZiAoIHBhZGRpbmdUeXBlLmVxdWFscyggIkxQIiApICkg
ewkJCQkJCQkKCQkJCQkJCQkJb3RWYWx1ZSA9IHBhZGRpbmdTdHJpbmcgKyBvdFZhbHVlOwkJCQkJ
CQoJCQkJCQkJCX0gZWxzZSBpZiAoIHBhZGRpbmdUeXBlLmVxdWFscyggIlJQIiApICkgewkJCQkJ
CQkKCQkJCQkJCQkJb3RWYWx1ZSA9IG90VmFsdWUgKyBwYWRkaW5nU3RyaW5nOwkJCQkJCQoJCQkJ
CQkJCX0KCQkJCQkJCQkKCQkJCQkJCQlzdHJCdWZmZXIuYXBwZW5kKCBvdFZhbHVlICk7CgkJCQkJ
CQkJCgkJCQkJCQkJcGFkZGluZ0xlbmd0aCA9IDA7CgkJCQkJCQkJcGFkZGluZ1N0cmluZyA9ICIi
OwoJCQkJCQkJfQoJCQkJCQkJCgkJCQkJCQkvLyDsoITrrLgg7KCE7LK0IOq4uOydtAoJCQkJCQkJ
aWYgKCBhZGREb2NMZW4uZXF1YWxzKCAiWSIgKSApIHsKCQkJCQkJCQlkb2NUb3RhbExlbiArPSBm
aWVsZExlbjsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCX0KCQkJCQkKCQkJCQlvdEluZGV4ID0gMDsJ
CQkJCQkKCQkJCX0KCQkJCQoJCQkJLy8g7ZiE7J6sIOy7pOyEnOyXkCDrjIDtlbTshJwgVGFyZ2V0
IEZpZWxkIOychOy5mOyXkCBWYWx1ZeulvCBBcHBlbmQKCQkJCWlmICggcmVhbEZpZWxkVHlwZS5l
cXVhbHMoICJTVCIgKSApIHsKCQkJCQl0cnkgewoJCQkJCQkvLyBmaWVsZExlbmd0aOyXkCDsi6Ts
oJzroZwgRmllbGTsnZgg6ri47J20IOygleuztOqwgCDsnojripQg6rK97JqwID09PiBGaWVsZOqw
gCDqs6DsoJXquLjsnbTsnbgg6rK97JqwCgkJCQkJCWZpZWxkTGVuID0gSW50ZWdlci5wYXJzZUlu
dCggZmllbGRMZW5ndGggKTsKCQkJCQl9IGNhdGNoICggRXhjZXB0aW9uIGllICkgewoJCQkJCQkv
LyBmaWVsZExlbmd0aOyXkCBGaWVsZOydmCDquLjsnbQg7KCV67O066W8IO2PrO2VqO2VmOuKlCBG
aWVsZOuqhSDsoJXrs7TqsIAg7J6I64qUIOqyveyasCA9PT4gRmllbGTqsIAg6rCA67OA6ri47J20
7J24IOqyveyasAoJCQkJCQlmaWVsZExlbmd0aCA9IElEYXRhVXRpbC5nZXRTdHJpbmcoIGN1ciwg
ZmllbGRMZW5ndGggKS50cmltKCk7CgkJCQkJCWZpZWxkTGVuID0gSW50ZWdlci5wYXJzZUludCgg
ZmllbGRMZW5ndGggKTsKCQkJCQkJCgkJCQkJCS8vIElEYXRhVXRpbC5nZXRTdHJpbmcg7Iuk7ZaJ
IOyLnCBDdXJzb3Ig7JyE7LmY6rCAIOydtOuPme2VmOuvgOuhnCBDdXJzb3Lrpbwg7JuQ656YIOyc
hOy5mOuhnCDri6Tsi5wg7J2064+Z7ZWc64ukLgoJCQkJCQlJRGF0YVV0aWwuZ2V0U3RyaW5nKCBj
dXIsIGN1cktleSApOwoJCQkJCX0KCQkJCQkKCQkJCQlJRGF0YVV0aWwucHV0KCBpbnB1dEN1cnNv
ciwgImNvbnRlbnQiLCBrZXlWYWx1ZSApOwoJCQkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29y
LCAiY2hhcnNldCIsIGNoYXJzZXQgKTsKCQkJCQkKCQkJCQlvdXRJRGF0YSA9IFNlcnZpY2UuZG9J
bnZva2UoICJKU29ja2V0QWRhcHRlci5DT01NT04uVVRJTC5TVFJJTkciLCAiZ2V0Qnl0ZUxlbmd0
aCIsIGluSURhdGEgKTsKCQkJCQlvdXRwdXRDdXJzb3IgPSBvdXRJRGF0YS5nZXRDdXJzb3IoKTsK
CQkJCQlieXRlTGVuZ3RoID0gSURhdGFVdGlsLmdldFN0cmluZyggb3V0cHV0Q3Vyc29yLCAiYnl0
ZUxlbmd0aCIgKTsKCQkJCQlieXRlTGVuID0gSW50ZWdlci5wYXJzZUludCggYnl0ZUxlbmd0aCAp
OwoJCQkJCQoJCQkJCWlmICggZmllbGRMZW4gPT0gYnl0ZUxlbiApIHsKCQkJCQkJc3RyQnVmZmVy
LmFwcGVuZCgga2V5VmFsdWUgKTsKCQkJCQl9IGVsc2UgaWYgKCBmaWVsZExlbiA8IGJ5dGVMZW4g
KSB7CgkJCQkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAiaW5TdHJpbmciLCBrZXlWYWx1
ZSApOwoJCQkJCQlJRGF0YVV0aWwucHV0KCBpbnB1dEN1cnNvciwgInN0YXJ0T2Zmc2V0IiwgIjAi
ICk7CgkJCQkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAibGVuZ3RoIiwgZmllbGRMZW5n
dGggKTsKCQkJCQkJSURhdGFVdGlsLnB1dCggaW5wdXRDdXJzb3IsICJjaGFyc2V0IiwgY2hhcnNl
dCApOwoJCQkJCQkKCQkJCQkJb3V0SURhdGEgPSBTZXJ2aWNlLmRvSW52b2tlKCAiSlNvY2tldEFk
YXB0ZXIuQ09NTU9OLlVUSUwuU1RSSU5HIiwgInN1YnN0cmluZ0J5Qnl0ZXMiLCBpbklEYXRhICk7
CgkJCQkJCW91dHB1dEN1cnNvciA9IG91dElEYXRhLmdldEN1cnNvcigpOwoJCQkJCQlrZXlWYWx1
ZSA9IElEYXRhVXRpbC5nZXRTdHJpbmcoIG91dHB1dEN1cnNvciwgIm91dFN0cmluZyIgKTsKCQkJ
CQkJc3RyQnVmZmVyLmFwcGVuZCgga2V5VmFsdWUgKTsKCQkJCQl9IGVsc2UgaWYgKCBmaWVsZExl
biA+IGJ5dGVMZW4gKSB7CgkJCQkJCXBhZGRpbmdMZW5ndGggPSBmaWVsZExlbiAtIGJ5dGVMZW47
CgkJCQkJCQoJCQkJCQlmb3IgKCBpbnQgaSA9IDA7IGkgPCBwYWRkaW5nTGVuZ3RoOyBpKysgKSB7
CgkJCQkJCQlwYWRkaW5nU3RyaW5nICs9IHBhZGRpbmdDaGFyOwoJCQkJCQl9CgkJCQkJCQoJCQkJ
CQlpZiAoIHBhZGRpbmdUeXBlLmVxdWFscyggIkxQIiApICkgewkJCQkJCQkKCQkJCQkJCWtleVZh
bHVlID0gcGFkZGluZ1N0cmluZyArIGtleVZhbHVlOwkJCQkJCQoJCQkJCQl9IGVsc2UgaWYgKCBw
YWRkaW5nVHlwZS5lcXVhbHMoICJSUCIgKSApIHsJCQkJCQkJCgkJCQkJCQlrZXlWYWx1ZSA9IGtl
eVZhbHVlICsgcGFkZGluZ1N0cmluZzsJCQkJCQkKCQkJCQkJfQoJCQkJCQkKCQkJCQkJc3RyQnVm
ZmVyLmFwcGVuZCgga2V5VmFsdWUgKTsKCQkJCQkJCgkJCQkJCXBhZGRpbmdMZW5ndGggPSAwOwoJ
CQkJCQlwYWRkaW5nU3RyaW5nID0gIiI7CgkJCQkJfQoJCQkJCQoJCQkJCS8vIOyghOusuCDsoITs
srQg6ri47J20CgkJCQkJaWYgKCBhZGREb2NMZW4uZXF1YWxzKCAiWSIgKSApIHsKCQkJCQkJZG9j
VG90YWxMZW4gKz0gZmllbGRMZW47CgkJCQkJfQoJCQkJfQoJCQkJCgkJCQlzY2hlbWFJbmRleCsr
OwoJCQl9IGVsc2UgaWYgKCBvYmogaW5zdGFuY2VvZiBJRGF0YSApIHsKCQkJCS8vZGVidWdMb2dn
ZXIucHJpbnRMb2dBdElTKCAiTG9nIDcgR3JvdXAiICk7CgkJCQlncm91cERvYyA9ICggSURhdGEg
KW9iajsKCQkJCXN0ckluZGV4ID0gbWFrZUlEYXRhU3RyaW5nX0FwcGx5U2NoZW1hKCBncm91cERv
Yywgc2NoZW1hTGlzdCwgc2NoZW1hSW5kZXgsIGNoYXJzZXQsICJTIiwgYWRkRG9jTGVuLCBwaXBl
bGluZURhdGEsICJmYWxzZSIgKTsKCQkJCWtleVZhbHVlID0gc3RySW5kZXhbIDAgXTsgLy8g7IOd
7ISx65CcIFNvY2tldCBTdHJpbmcKCQkJCXN0ckJ1ZmZlci5hcHBlbmQoIGtleVZhbHVlICk7CgkJ
CQkvL2RlYnVnTG9nZ2VyLnByaW50TG9nQXRJUyggIkxvZyA4IEdyb3VwIFN0cmluZyA6ICIgKyBr
ZXlWYWx1ZSApOwoJCQkJLy8gbWFrZUlEYXRhU3RyaW5nX0FwcGx5U2NoZW1hIOyLpO2Wie2VmOuK
lCDrj4TspJHsl5AgYWRkRG9jTGVu7J20IFnroZwg67OA6rK965CY7JeI7J2EIOyImCDsnojquLAg
65WM66y47JeQIGFkZERvY0xlbuydmCDqsrDqs7zrpbwg67Cb7JWE7JW8IO2VnOuLpC4KCQkJCWFk
ZERvY0xlbiA9IHN0ckluZGV4WyAzIF07CgkJCQkKCQkJCWlmICggIXN0ckluZGV4WyA0IF0uZXF1
YWxzKCAiMCIgKSAmJiAhc3RySW5kZXhbIDUgXS5lcXVhbHMoICIwIiApICkgewoJCQkJCS8vIGFk
ZERvY0xlbuydtCBO7JeQ7IScIFnroZwg67OA6rK965CcIOqyveyasCA9PT4g7KCE66y46ri47J20
IOychOy5mOydmCDsi5zsnpEg7J247YWN7IqkLCDsoITrrLjquLjsnbQg7ZWE65Oc7J2YIOq4uOyd
tOulvCDrsJvslYTslbwg7ZWc64ukLgoJCQkJCS8vIOyghOusuOq4uOydtCDsnITsuZgg7KCV67O0
IOy2lOy2nOydgCBDb252ZXJ0aW5nIO2VmOuKlCDspJHsl5Ag7ZWc67KI66eMIOyLpO2WieuQnOuL
pC4KCQkJCQlsZW5ndGhTdGFydEluZGV4ID0gSW50ZWdlci5wYXJzZUludCggc3RySW5kZXhbIDQg
XSApOwoJCQkJCWxlbmd0aEZpZWxkTGVuID0gSW50ZWdlci5wYXJzZUludCggc3RySW5kZXhbIDUg
XSApOwoJCQkJfQoJCQkJCgkJCQkvLyDsoITrrLgg7KCE7LK0IOq4uOydtAoJCQkJLyoKCQkJCWlm
ICggYWRkRG9jTGVuLmVxdWFscyggIlkiICkgKSB7CgkJCQkJZG9jVG90YWxMZW4gKz0gSW50ZWdl
ci5wYXJzZUludCggc3RySW5kZXhbIDIgXSApOwoJCQkJfQoJCQkJKi8KCQkJCWRvY1RvdGFsTGVu
ID0gZG9jVG90YWxMZW4gKyBJbnRlZ2VyLnBhcnNlSW50KCBzdHJJbmRleFsgMiBdICk7CgkJCQkv
L2RlYnVnTG9nZ2VyLnByaW50TG9nQXRJUyggIkxvZyA5IEdyb3VwIERvYyBMZW5ndGggOiAiICsg
c3RySW5kZXhbIDIgXSApOwoJCQkJc2NoZW1hSW5kZXggPSBJbnRlZ2VyLnBhcnNlSW50KCBzdHJJ
bmRleFsgMSBdICk7CgkJCQkvL2RlYnVnTG9nZ2VyLnByaW50TG9nQXRJUyggIkxvZyAxMCBzY2hl
bWFJbmRleCA6ICIgKyBzY2hlbWFJbmRleCApOwoJCQl9IGVsc2UgaWYgKCBvYmogaW5zdGFuY2Vv
ZiBJRGF0YVtdICkgewoJCQkJaURhdGFMaXN0ID0gKCBJRGF0YVtdIClvYmo7CgkJCQkvL2RlYnVn
TG9nZ2VyLnByaW50TG9nQXRJUyggIkxvZyAxMSBBcnJheSBTaXplIDogIiArIGlEYXRhTGlzdC5s
ZW5ndGggKTsKCQkJCWlmICggaURhdGFMaXN0ID09IG51bGwgKSB7CgkJCQkJY29udGludWU7CgkJ
CQl9CgkJCQkKCQkJCWZvciAoIGludCBpID0gMDsgaSA8IGlEYXRhTGlzdC5sZW5ndGg7IGkrKyAp
IHsKCQkJCQlpZiAoIGlEYXRhTGlzdFsgaSBdID09IG51bGwgKSB7CgkJCQkJCWNvbnRpbnVlOwoJ
CQkJCX0KCQkJCQkKCQkJCQlzdHJJbmRleCA9IG1ha2VJRGF0YVN0cmluZ19BcHBseVNjaGVtYSgg
aURhdGFMaXN0WyBpIF0sIHNjaGVtYUxpc3QsIHNjaGVtYUluZGV4LCBjaGFyc2V0LCAiQSIsIGFk
ZERvY0xlbiwgcGlwZWxpbmVEYXRhLCAiZmFsc2UiICk7CgkJCQkJa2V5VmFsdWUgPSBzdHJJbmRl
eFsgMCBdOyAvLyDsg53shLHrkJwgU29ja2V0IFN0cmluZwoJCQkJCXN0ckJ1ZmZlci5hcHBlbmQo
IGtleVZhbHVlICk7CgkJCQkJLy9kZWJ1Z0xvZ2dlci5wcmludExvZ0F0SVMoICJMb2cgMTIgQXJy
YXkgU3RyaW5nIDogIiArIGtleVZhbHVlICk7CgkJCQkJLy8g7KCE66y4IOyghOyytCDquLjsnbQK
CQkJCQlkb2NUb3RhbExlbiA9IGRvY1RvdGFsTGVuICsgSW50ZWdlci5wYXJzZUludCggc3RySW5k
ZXhbIDIgXSApOwoJCQkJCS8vZGVidWdMb2dnZXIucHJpbnRMb2dBdElTKCAiTG9nIDEzIEFycmF5
IERvYyBMZW5ndGggOiAiICsgc3RySW5kZXhbIDIgXSApOwoJCQkJfQoJCQkJCgkJCQlzY2hlbWFJ
bmRleCA9IEludGVnZXIucGFyc2VJbnQoIHN0ckluZGV4WyAxIF0gKTsKCQkJfQoJCX0KCQkvL2Rl
YnVnTG9nZ2VyLnByaW50TG9nQXRJUyggInNjaGVtYUluZGV4IDogIiArIHNjaGVtYUluZGV4ICk7
CgkJLy9kZWJ1Z0xvZ2dlci5wcmludExvZ0F0SVMoICJkb2NUb3RhbExlbiA6ICIgKyBkb2NUb3Rh
bExlbiApOwoJCS8vZGVidWdMb2dnZXIucHJpbnRMb2dBdElTKCAiZmlyc3RJbnZva2UgOiAiICsg
Zmlyc3RJbnZva2UgKTsKCQkvLyDsoITssrQgU29ja2V0IFN0cmluZwoJCXNvY2tldFN0cmluZyA9
IHN0ckJ1ZmZlci50b1N0cmluZygpOwoJCQoJCS8vIOyghOusuCDsoITssrQg6ri47J20IOqwkiDs
gr3snoUg65iQ64qUIFJlcGxhY2UKCQkvL2lmICggc2luZ2xlQXJyYXkuZXF1YWxzKCAiUyIgKSAm
JiBhZGREb2NMZW4uZXF1YWxzKCAiWSIgKSApIHsKCQlpZiAoIGZpcnN0SW52b2tlLmVxdWFscygg
InRydWUiICkgJiYgYWRkRG9jTGVuLmVxdWFscyggIlkiICkgKSB7CgkJCS8vIOyghOusuCDsoITs
srQg6ri47J20IOqwkuyXkCDrjIDtlbTshJwg7Yyo65SpIOyymOumrAoJCQlJRGF0YVV0aWwucHV0
KCBpbnB1dEN1cnNvciwgImluU3RyaW5nIiwgZG9jVG90YWxMZW4gKyAiIiApOwoJCQlJRGF0YVV0
aWwucHV0KCBpbnB1dEN1cnNvciwgInBhZFN0cmluZyIsICIwIiApOwoJCQlJRGF0YVV0aWwucHV0
KCBpbnB1dEN1cnNvciwgImxlbmd0aCIsIGxlbmd0aEZpZWxkTGVuICsgIiIgKTsKCQkJCgkJCW91
dElEYXRhID0gU2VydmljZS5kb0ludm9rZSggInB1Yi5zdHJpbmciLCAicGFkTGVmdCIsIGluSURh
dGEgKTsKCQkJb3V0cHV0Q3Vyc29yID0gb3V0SURhdGEuZ2V0Q3Vyc29yKCk7CgkJCWRvY0xlbiA9
IElEYXRhVXRpbC5nZXRTdHJpbmcoIG91dHB1dEN1cnNvciwgInZhbHVlIiApOwoJCQkKCQkJLy8g
7KCE66y4IOyghOyytCDquLjsnbQg6rCS7J2EIOyCveyehe2VmOq4sCDsoITquYzsp4DsnZggU29j
a2V0IFN0cmluZyDstpTstpwKCQkJSURhdGFVdGlsLnB1dCggaW5wdXRDdXJzb3IsICJpblN0cmlu
ZyIsIHNvY2tldFN0cmluZyApOwoJCQlJRGF0YVV0aWwucHV0KCBpbnB1dEN1cnNvciwgInN0YXJ0
T2Zmc2V0IiwgIjAiICk7CgkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAibGVuZ3RoIiwg
bGVuZ3RoU3RhcnRJbmRleCArICIiICk7CgkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAi
Y2hhcnNldCIsIGNoYXJzZXQgKTsKCQkJCgkJCW91dElEYXRhID0gU2VydmljZS5kb0ludm9rZSgg
IkpTb2NrZXRBZGFwdGVyLkNPTU1PTi5VVElMLlNUUklORyIsICJzdWJzdHJpbmdCeUJ5dGVzIiwg
aW5JRGF0YSApOwoJCQlvdXRwdXRDdXJzb3IgPSBvdXRJRGF0YS5nZXRDdXJzb3IoKTsKCQkJYmVm
b3JlTGVuZ3RoTG9jID0gSURhdGFVdGlsLmdldFN0cmluZyggb3V0cHV0Q3Vyc29yLCAib3V0U3Ry
aW5nIiApOwoJCQkKCQkJLy8gYWZ0ZXJMZW5ndGhMb2PripQgbGVuZ3RoU3RhcnRJbmRleCArIGxl
bmd0aEZpZWxkTGVuIOu2gO2EsCDstpTstpztlZjrqbQg65Cc64ukLgoJCQlsZW5ndGhTdGFydElu
ZGV4ID0gbGVuZ3RoU3RhcnRJbmRleCArIGxlbmd0aEZpZWxkTGVuOwkJCQkKCQkJCgkJCS8vIC8v
IOyghOusuCDsoITssrQg6ri47J20IOqwkuydhCDsgr3snoXtlZwg7J207ZuE7J2YIFNvY2tldCBT
dHJpbmcg7LaU7LacCgkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAiaW5TdHJpbmciLCBz
b2NrZXRTdHJpbmcgKTsKCQkJSURhdGFVdGlsLnB1dCggaW5wdXRDdXJzb3IsICJzdGFydE9mZnNl
dCIsIGxlbmd0aFN0YXJ0SW5kZXggKyAiIiApOwoJCQlJRGF0YVV0aWwucHV0KCBpbnB1dEN1cnNv
ciwgImxlbmd0aCIsICIiICk7CgkJCUlEYXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAiY2hhcnNl
dCIsIGNoYXJzZXQgKTsKCQkJCQoJCQlvdXRJRGF0YSA9IFNlcnZpY2UuZG9JbnZva2UoICJKU29j
a2V0QWRhcHRlci5DT01NT04uVVRJTC5TVFJJTkciLCAic3Vic3RyaW5nQnlCeXRlcyIsIGluSURh
dGEgKTsKCQkJb3V0cHV0Q3Vyc29yID0gb3V0SURhdGEuZ2V0Q3Vyc29yKCk7CgkJCWFmdGVyTGVu
Z3RoTG9jID0gSURhdGFVdGlsLmdldFN0cmluZyggb3V0cHV0Q3Vyc29yLCAib3V0U3RyaW5nIiAp
OwoJCQkKCQkJLy8g7KCE7LK0IFNvY2tldCBTdHJpbmcg7J6sIOyDneyEsS4g7ZW064u5IOychOy5
mOyXkCBkb2NUb3RhbExlbuydhCBSZXBsYWNlIO2VnOuLpC4KCQkJc29ja2V0U3RyaW5nID0gYmVm
b3JlTGVuZ3RoTG9jICsgZG9jTGVuICsgYWZ0ZXJMZW5ndGhMb2M7CgkJfQoJfSBjYXRjaCAoIEV4
Y2VwdGlvbiBlICkgewoJCWVycm9yTXNnID0gZS50b1N0cmluZygpOwoJCS8vZGVidWdMb2dnZXIu
cHJpbnRMb2dBdElTKCAiU29ja2V0IFN0cmluZyA6ICIgKyBzdHJCdWZmZXIudG9TdHJpbmcoKSAp
OwoJCS8vZGVidWdMb2dnZXIucHJpbnRMb2dBdElTKCAiZXJyb3JNc2cgOiAiICsgZXJyb3JNc2cg
KTsKCX0KCQoJY3VyLmRlc3Ryb3koKTsKCWlucHV0Q3Vyc29yLmRlc3Ryb3koKTsKCQoJaWYgKCBv
dXRwdXRDdXJzb3IgIT0gbnVsbCApIHsKCQlvdXRwdXRDdXJzb3IuZGVzdHJveSgpOwoJfQoJCglp
RGF0YUxpc3QgPSBudWxsOwoJaW5JRGF0YSA9IG51bGw7CglvdXRJRGF0YSA9IG51bGw7Cglncm91
cERvYyA9IG51bGw7CgkKCWlEYXRhU3RyaW5nWyAwIF0gPSBzb2NrZXRTdHJpbmc7CglpRGF0YVN0
cmluZ1sgMSBdID0gc2NoZW1hSW5kZXggKyAiIjsKCWlEYXRhU3RyaW5nWyAyIF0gPSBkb2NUb3Rh
bExlbiArICIiOwoJaURhdGFTdHJpbmdbIDMgXSA9IGFkZERvY0xlbjsKCWlEYXRhU3RyaW5nWyA0
IF0gPSBsZW5ndGhTdGFydEluZGV4ICsgIiI7CglpRGF0YVN0cmluZ1sgNSBdID0gbGVuZ3RoRmll
bGRMZW4gKyAiIjsKCWlEYXRhU3RyaW5nWyA2IF0gPSBlcnJvck1zZzsKCQoJcmV0dXJuIGlEYXRh
U3RyaW5nOwp9</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
    <value>com.wm.app.b2b.server.InvokeState</value>
    <value>com.wm.app.audit.IAuditRuntime</value>
    <value>com.wm.lang.ns.*</value>
    <value>java.io.OutputStream</value>
    <value>java.io.InputStream</value>
    <value>java.net.Socket</value>
    <value>java.io.BufferedInputStream</value>
    <value>java.io.BufferedOutputStream</value>
    <value>java.io.ByteArrayOutputStream</value>
    <value>java.text.SimpleDateFormat</value>
    <value>java.util.ArrayList</value>
    <value>java.util.Arrays</value>
    <value>java.util.Collections</value>
    <value>java.util.Comparator</value>
    <value>java.util.Date</value>
    <value>java.util.Enumeration</value>
    <value>java.util.HashMap</value>
    <value>java.util.Hashtable</value>
    <value>java.util.Vector</value>
    <value>java.io.*</value>
    <value>java.net.SocketException</value>
    <value>custom.java.com.log.DebugLogger</value>
    <value>custom.java.socket.manager.*</value>
  </array>
</Values>
